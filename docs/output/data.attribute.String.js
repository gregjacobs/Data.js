Ext.data.JsonP.data_attribute_String({"tagname":"class","name":"data.attribute.String","extends":"data.attribute.Primitive","mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-data.attribute.String","members":{"cfg":[{"name":"defaultValue","tagname":"cfg","owner":"data.attribute.String","meta":{},"id":"cfg-defaultValue"},{"name":"get","tagname":"cfg","owner":"data.attribute.Attribute","meta":{},"id":"cfg-get"},{"name":"name","tagname":"cfg","owner":"data.attribute.Attribute","meta":{"required":true},"id":"cfg-name"},{"name":"persist","tagname":"cfg","owner":"data.attribute.Attribute","meta":{},"id":"cfg-persist"},{"name":"raw","tagname":"cfg","owner":"data.attribute.Attribute","meta":{},"id":"cfg-raw"},{"name":"set","tagname":"cfg","owner":"data.attribute.Attribute","meta":{},"id":"cfg-set"},{"name":"type","tagname":"cfg","owner":"data.attribute.Attribute","meta":{},"id":"cfg-type"},{"name":"useNull","tagname":"cfg","owner":"data.attribute.String","meta":{},"id":"cfg-useNull"}],"property":[],"method":[{"name":"constructor","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-constructor"},{"name":"afterSet","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-afterSet"},{"name":"convert","tagname":"method","owner":"data.attribute.String","meta":{},"id":"method-convert"},{"name":"getDefaultValue","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-getDefaultValue"},{"name":"getName","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-getName"},{"name":"getType","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-getType"},{"name":"hasType","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-hasType"},{"name":"hasUserDefinedGetter","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-hasUserDefinedGetter"},{"name":"hasUserDefinedSetter","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-hasUserDefinedSetter"},{"name":"isPersisted","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-isPersisted"},{"name":"set","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-set"},{"name":"valuesAreEqual","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-valuesAreEqual"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":10,"files":[{"filename":"String.js","href":"String.html#data-attribute-String"}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":["data.attribute.Attribute","data.attribute.Primitive"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='docClass'>data.attribute.Attribute</a><div class='subclass '><a href='#!/api/data.attribute.Primitive' rel='data.attribute.Primitive' class='docClass'>data.attribute.Primitive</a><div class='subclass '><strong>data.attribute.String</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/String.html#data-attribute-String' target='_blank'>String.js</a></div></pre><div class='doc-contents'><p>Attribute definition class for an Attribute that takes a string data value.</p>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Required Config options</h3><div id='cfg-name' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-cfg-name' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-cfg-name' class='name expandable'>name</a><span> : String</span><strong class='required signature' >required</strong></div><div class='description'><div class='short'>The name for the attribute, which is used by the owner Model to reference it. ...</div><div class='long'><p>The name for the attribute, which is used by the owner Model to reference it.</p>\n<p>Defaults to: <code>&quot;&quot;</code></p></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Optional Config options</h3><div id='cfg-defaultValue' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.attribute.String'>data.attribute.String</span><br/><a href='source/String.html#data-attribute-String-cfg-defaultValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.String-cfg-defaultValue' class='name expandable'>defaultValue</a><span> : Mixed/Function</span></div><div class='description'><div class='short'>The String Attribute defaults to \"\" (empty string), unless the useNull config is\nset to true, in which case it defaul...</div><div class='long'><p>The String Attribute defaults to <code>\"\"</code> (empty string), unless the <a href=\"#!/api/data.attribute.String-cfg-useNull\" rel=\"data.attribute.String-cfg-useNull\" class=\"docClass\">useNull</a> config is\nset to <code>true</code>, in which case it defaults to <code>null</code> (to denote the Attribute being \"unset\").</p>\n\n<p>The default value to set to the Attribute, when the Attribute is given no initial value.</p>\n\n<p>If the <code>defaultValue</code> is a function, the function will be executed each time a <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a> is created, and its return\nvalue is used as the <code>defaultValue</code>. This is useful, for example, to assign a new unique number to an attribute of a <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a>.\nEx:</p>\n\n<pre><code>require( [\n    'lodash',   // assuming Lo-Dash (or alternatively, Underscore.js) is available\n    'data/Model'\n], function( _, Model ) {\n\n    MyModel = Model.extend( {\n        attributes : [\n            {\n                name: 'uniqueId', \n                defaultValue: function() {\n                    return _.uniqueId();\n                }\n            }\n        ]\n    } );\n\n} );\n</code></pre>\n\n<p>Note that the function is called in the scope of the Attribute, which may be used to read the Attribute's own properties/configs,\nor call its methods.</p>\n<p>Overrides: <a href='#!/api/data.attribute.Attribute-cfg-defaultValue' rel='data.attribute.Attribute-cfg-defaultValue' class='docClass'>data.attribute.Attribute.defaultValue</a></p></div></div></div><div id='cfg-get' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-cfg-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-cfg-get' class='name expandable'>get</a><span> : Function</span></div><div class='description'><div class='short'>A function that can be used to convert the stored value that is held by a Model, when the Model's get\nmethod is calle...</div><div class='long'><p>A function that can be used to convert the stored value that is held by a Model, when the Model's <a href=\"#!/api/data.Model-method-get\" rel=\"data.Model-method-get\" class=\"docClass\">get</a>\nmethod is called for the Attribute. This is useful to create \"computed\" attributes, which may be created based on other\nAttributes' values. The function is passed the argument of the underlying stored value, and should return the computed value.</p>\n\n<p>This function is passed the following arguments:</p>\n\n<ul>\n<li><p><strong>model</strong> : <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">data.Model</a></p>\n\n<p>The Model for which the value of the Attribute is being retrieved.</p></li>\n<li><p><strong>value</strong> : Mixed</p>\n\n<p>The value that the Attribute currently has stored in the <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a>.</p></li>\n</ul>\n\n\n<p>For example, if we had a <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a> with <code>firstName</code> and <code>lastName</code> Attributes, and we wanted to create a <code>fullName</code>\nAttribute, this could be done as in the example below.</p>\n\n<pre><code>{\n    name : 'fullName',\n\n    get : function( model, value ) {  // in this example, the Attribute has no value of its own, so we ignore the `value` arg\n        return model.get( 'firstName' ) + \" \" + model.get( 'lastName' );\n    }\n}\n</code></pre>\n\n<h2>Notes:</h2>\n\n<ul>\n<li>Both a <code>set</code> and a <a href=\"#!/api/data.attribute.Attribute-cfg-get\" rel=\"data.attribute.Attribute-cfg-get\" class=\"docClass\">get</a> function can be used in conjunction.</li>\n<li>If the intention is to convert a provided value which needs to be stored on the <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a> in a different way,\nuse a <a href=\"#!/api/data.attribute.Attribute-cfg-set\" rel=\"data.attribute.Attribute-cfg-set\" class=\"docClass\">set</a> function instead.</li>\n<li>The <code>get</code> function is called in the scope of the Attribute, so any properties or methods of the Attribute may be referenced.</li>\n</ul>\n\n</div></div></div><div id='cfg-persist' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-cfg-persist' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-cfg-persist' class='name expandable'>persist</a><span> : Boolean</span></div><div class='description'><div class='short'>True if the attribute should be persisted by its Model using the Model's proxy. ...</div><div class='long'><p>True if the attribute should be persisted by its <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a> using the Model's <a href=\"#!/api/data.Model-cfg-proxy\" rel=\"data.Model-cfg-proxy\" class=\"docClass\">proxy</a>.\nSet to false to prevent the attribute from being persisted.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-raw' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-cfg-raw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-cfg-raw' class='name expandable'>raw</a><span> : Function</span></div><div class='description'><div class='short'>A function that can be used to convert an Attribute's value to a raw representation, usually for persisting data on a...</div><div class='long'><p>A function that can be used to convert an Attribute's value to a raw representation, usually for persisting data on a server.\nThis function is automatically called (if it exists) when a persistence <a href=\"#!/api/data.persistence.proxy.Proxy\" rel=\"data.persistence.proxy.Proxy\" class=\"docClass\">proxy</a> is collecting\nthe data to send to the server. The function is passed two arguments, and should return the raw value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>model</span> : <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">data.Model</a><div class='sub-desc'><p>The Model instance that this Attribute belongs to.</p>\n</div></li><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The underlying value that the Attribute currently has stored in the <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a>.</p>\n\n<p>For example, a Date object is normally converted to JSON with both its date and time components in a serialized string (such\nas \"2012-01-26T01:20:54.619Z\"). To instead persist the Date in m/d/yyyy format, one could create an Attribute such as this:</p>\n\n<pre><code>{\n    name : 'eventDate',\n\n    set : function( model, value ) { return new Date( value ); },  // so the value is stored as a Date object when used client-side\n    raw : function( model, value ) {\n        return (value.getMonth()+1) + '/' + value.getDate() + '/' + value.getFullYear();  // m/d/yyyy format \n    }\n}\n</code></pre>\n\n<p>The value that this function returns is the value that is used when the Model's <a href=\"#!/api/data.Model-method-raw\" rel=\"data.Model-method-raw\" class=\"docClass\">raw</a> method is called\non the Attribute.</p>\n\n<p>This function is called in the scope of the Attribute, so any properties or methods of the Attribute may be referenced.</p>\n</div></li></ul></div></div></div><div id='cfg-set' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-cfg-set' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-cfg-set' class='name expandable'>set</a><span> : Function</span></div><div class='description'><div class='short'>A function that can be used to implement any custom processing needed to convert the raw value provided to the attrib...</div><div class='long'><p>A function that can be used to implement any custom processing needed to convert the raw value provided to the attribute to\nthe value which will ultimately be stored on the <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a>. Only provide this config if you want to override\nthe default <a href=\"#!/api/data.attribute.Attribute-method-convert\" rel=\"data.attribute.Attribute-method-convert\" class=\"docClass\">convert</a> function which is used by the Attribute (or Attribute subclass).</p>\n\n<p>This function is passed the following arguments:</p>\n\n<ul>\n<li><p><strong>model</strong> : <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">data.Model</a></p>\n\n<p>The Model for which a value to the Attribute is being set.</p></li>\n<li><p><strong>newValue</strong> : Mixed</p>\n\n<p>The provided new data value to the attribute. If the attribute has no initial data value, its <a href=\"#!/api/data.attribute.Attribute-cfg-defaultValue\" rel=\"data.attribute.Attribute-cfg-defaultValue\" class=\"docClass\">defaultValue</a>\nwill be provided to this argument upon instantiation of the <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a>.</p></li>\n<li><p><strong>oldValue</strong> : Mixed</p>\n\n<p>The old value that the attribute held (if any).</p></li>\n</ul>\n\n\n<p>The function should do any processing that is necessary, and return the value that the Model should hold for the value.\nFor example, this <code>set</code> function will convert a string value to a JavaScript\n<a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date\" target=\"_blank\">Date</a>\nobject. Otherwise, it will return the value unchanged:</p>\n\n<pre><code>{\n    name : 'myDateAttr',\n\n    set : function( model, newValue, oldValue ) {\n        if( typeof newValue === 'string' ) {\n            newValue = new Date( newValue );\n        }\n        return newValue;\n    }\n}\n</code></pre>\n\n<p>If you are using an Attribute subclass (such as the <a href=\"#!/api/data.attribute.String\" rel=\"data.attribute.String\" class=\"docClass\">StringAttribute</a>), and you want to call the\noriginal <a href=\"#!/api/data.attribute.Attribute-method-convert\" rel=\"data.attribute.Attribute-method-convert\" class=\"docClass\">convert</a> function that is defined, as well as add your own conversion processing, you can do so by simply\ncalling <code>this.convert( newValue )</code> in your <code>set</code> function. Ex:</p>\n\n<pre><code>{\n    name : 'trimmedName',\n    type : 'string',\n\n    set : function( model, newValue ) {\n        newValue = this.convert( newValue );  // make sure it's been converted to a string, using all of the rules defined in the StringAttribute\n\n        return ( newValue.length &gt; 50 ) ? newValue.substr( 0, 47 ) + '...' : newValue;   // this would most likely be a View detail in a real application, but demonstrates the capability\n    }\n}\n</code></pre>\n\n<h2>Computed Attributes</h2>\n\n<p>The <code>set</code> function can also be used to set other attributes of a \"computed\" attribute. Ex:</p>\n\n<pre><code>{\n    // A \"computed\" attribute which combines the 'firstName' and 'lastName' attributes in this model \n    // (assuming they are there)\n    name : 'fullName',\n\n    set : function( model, newValue, oldValue ) {\n        // Setter which takes the first and last name given (such as \"John Smith\"), and splits them up into \n        // their appropriate parts, to set the appropriate \"source\" attributes for the computed attribute.\n        var names = newValue.split( ' ' );  // split on the space between first and last name\n\n        model.set( 'firstName', names[ 0 ] );\n        model.set( 'lastName', names[ 1 ] );\n    },\n\n    get : function( model, value ) {\n        // Combine firstName and lastName \"source\" attributes for the computed attribute's return\n        return model.get( 'firstName' ) + \" \" + model.get( 'lastName' );\n    }\n}\n</code></pre>\n\n<p>For the general case of querying other Attributes for their value, be careful in that they may not be set to the expected value\nwhen this <code>set</code> function executes. For creating computed Attributes that rely on other Attributes' values, use a <a href=\"#!/api/data.attribute.Attribute-cfg-get\" rel=\"data.attribute.Attribute-cfg-get\" class=\"docClass\">get</a>\nfunction instead.</p>\n\n<h2>Notes:</h2>\n\n<ul>\n<li>Both a <code>set</code> and a <a href=\"#!/api/data.attribute.Attribute-cfg-get\" rel=\"data.attribute.Attribute-cfg-get\" class=\"docClass\">get</a> function can be used in conjunction.</li>\n<li>The <code>set</code> function is called upon instantiation of the <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a> if the Model is passed an initial value\nfor the Attribute, or if the Attribute has a <a href=\"#!/api/data.attribute.Attribute-cfg-defaultValue\" rel=\"data.attribute.Attribute-cfg-defaultValue\" class=\"docClass\">defaultValue</a>.</li>\n<li>The <code>set</code> function is called in the scope of the Attribute, so any properties or methods of the Attribute may be referenced.</li>\n</ul>\n\n</div></div></div><div id='cfg-type' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-cfg-type' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-cfg-type' class='name expandable'>type</a><span> : String</span></div><div class='description'><div class='short'>Specifies the type of the Attribute, in which a conversion of the raw data will be performed. ...</div><div class='long'><p>Specifies the type of the Attribute, in which a conversion of the raw data will be performed.\nThis accepts the following general types, but custom types may be added using the <a href=\"#!/api/data.attribute.Attribute-static-method-registerType\" rel=\"data.attribute.Attribute-static-method-registerType\" class=\"docClass\">registerType</a> method.</p>\n\n<ul>\n<li><a href=\"#!/api/data.attribute.Mixed\" rel=\"data.attribute.Mixed\" class=\"docClass\">mixed</a>: Performs no conversions, and no special processing of given values. This is the default Attribute type (not recommended).</li>\n<li><a href=\"#!/api/data.attribute.String\" rel=\"data.attribute.String\" class=\"docClass\">string</a></li>\n<li><a href=\"#!/api/data.attribute.Integer\" rel=\"data.attribute.Integer\" class=\"docClass\">int</a> / <a href=\"#!/api/data.attribute.Integer\" rel=\"data.attribute.Integer\" class=\"docClass\">integer</a></li>\n<li><a href=\"#!/api/data.attribute.Float\" rel=\"data.attribute.Float\" class=\"docClass\">float</a> (really a \"double\")</li>\n<li><a href=\"#!/api/data.attribute.Boolean\" rel=\"data.attribute.Boolean\" class=\"docClass\">boolean</a> / <a href=\"#!/api/data.attribute.Boolean\" rel=\"data.attribute.Boolean\" class=\"docClass\">bool</a></li>\n<li><a href=\"#!/api/data.attribute.Date\" rel=\"data.attribute.Date\" class=\"docClass\">date</a></li>\n<li><a href=\"#!/api/data.attribute.Model\" rel=\"data.attribute.Model\" class=\"docClass\">model</a></li>\n<li><a href=\"#!/api/data.attribute.Collection\" rel=\"data.attribute.Collection\" class=\"docClass\">collection</a></li>\n</ul>\n\n</div></div></div><div id='cfg-useNull' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.attribute.String'>data.attribute.String</span><br/><a href='source/String.html#data-attribute-String-cfg-useNull' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.String-cfg-useNull' class='name expandable'>useNull</a><span> : Boolean</span></div><div class='description'><div class='short'>True to allow null to be set to the Attribute (which is usually used to denote that the\nAttribute is \"unset\", and it ...</div><div class='long'><p>True to allow <code>null</code> to be set to the Attribute (which is usually used to denote that the\nAttribute is \"unset\", and it shouldn't take an actual default value).</p>\n\n<p>This is also used when parsing the provided value for the Attribute. If this config is true, and the value\ncannot be \"easily\" parsed into a String (i.e. if it's undefined, or null), <code>null</code> will be used\ninstead of converting to an empty string.</p>\n<p>Overrides: <a href='#!/api/data.attribute.Primitive-cfg-useNull' rel='data.attribute.Primitive-cfg-useNull' class='docClass'>data.attribute.Primitive.useNull</a></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/data.attribute.Attribute-method-constructor' class='name expandable'>data.attribute.String</a>( <span class='pre'>config</span> ) : <a href=\"#!/api/data.attribute.Attribute\" rel=\"data.attribute.Attribute\" class=\"docClass\">data.attribute.Attribute</a></div><div class='description'><div class='short'>Creates a new Attribute instance. ...</div><div class='long'><p>Creates a new Attribute instance. Note: You will normally not be using this constructor function, as this class\nis only used internally by <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">data.Model</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object/String<div class='sub-desc'><p>An Object (map) of the Attribute object's configuration options, which is its definition.\n  Can also be its Attribute <a href=\"#!/api/data.attribute.Attribute-cfg-name\" rel=\"data.attribute.Attribute-cfg-name\" class=\"docClass\">name</a> provided directly as a string.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/data.attribute.Attribute\" rel=\"data.attribute.Attribute\" class=\"docClass\">data.attribute.Attribute</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-afterSet' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-afterSet' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-afterSet' class='name expandable'>afterSet</a>( <span class='pre'>model, value</span> ) : Mixed</div><div class='description'><div class='short'>Method that allows for post-processing of the value that is to be set to the data.Model. ...</div><div class='long'><p>Method that allows for post-processing of the value that is to be set to the <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">data.Model</a>.\nThis method is executed after the <a href=\"#!/api/data.attribute.Attribute-method-set\" rel=\"data.attribute.Attribute-method-set\" class=\"docClass\">set method</a> (or <a href=\"#!/api/data.attribute.Attribute-cfg-set\" rel=\"data.attribute.Attribute-cfg-set\" class=\"docClass\">set config</a> function, if one was\nprovided). The <code>value</code> provided to this method is the value that has been already processed by <a href=\"#!/api/data.attribute.Attribute-method-set\" rel=\"data.attribute.Attribute-method-set\" class=\"docClass\">set</a>.</p>\n\n<p>The return value from this method will be the value that is ultimately set as the data for the Attribute on the\n<a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a>.</p>\n\n<p>Note that the default implementation simply returns the value unchanged, but this may be overridden\nin subclasses to provide a post-processing conversion or type check.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>model</span> : <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">data.Model</a><div class='sub-desc'><p>The Model instance that is providing the value. This is normally not used,\n  but is provided in case any model processing is needed.</p>\n\n\n\n</div></li><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value provided to the <a href=\"#!/api/data.Model-method-set\" rel=\"data.Model-method-set\" class=\"docClass\">data.Model.set</a> method, after it has been processed by either\n  the <a href=\"#!/api/data.attribute.Attribute-method-set\" rel=\"data.attribute.Attribute-method-set\" class=\"docClass\">set method</a> or any provided <a href=\"#!/api/data.attribute.Attribute-cfg-set\" rel=\"data.attribute.Attribute-cfg-set\" class=\"docClass\">set config</a> function.</p>\n\n\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Mixed</span><div class='sub-desc'><p>The converted value.</p>\n\n\n\n</div></li></ul></div></div></div><div id='method-convert' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.attribute.String'>data.attribute.String</span><br/><a href='source/String.html#data-attribute-String-method-convert' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.String-method-convert' class='name expandable'>convert</a>( <span class='pre'>value</span> ) : String</div><div class='description'><div class='short'>Override of superclass method used to convert the value into a string. ...</div><div class='long'><p>Override of superclass method used to convert the value into a string. If <a href=\"#!/api/data.attribute.String-cfg-useNull\" rel=\"data.attribute.String-cfg-useNull\" class=\"docClass\">useNull</a> is true, \"unparsable\" values\nwill return null. See <a href=\"#!/api/data.attribute.String-cfg-useNull\" rel=\"data.attribute.String-cfg-useNull\" class=\"docClass\">useNull</a> for details.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value to convert.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul><p>Overrides: <a href='#!/api/data.attribute.Attribute-method-convert' rel='data.attribute.Attribute-method-convert' class='docClass'>data.attribute.Attribute.convert</a></p></div></div></div><div id='method-getDefaultValue' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-getDefaultValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-getDefaultValue' class='name expandable'>getDefaultValue</a>( <span class='pre'></span> ) : Mixed</div><div class='description'><div class='short'>Retrieves the default value for the Attribute. ...</div><div class='long'><p>Retrieves the default value for the Attribute.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Mixed</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-getName' class='name expandable'>getName</a>( <span class='pre'></span> ) : String</div><div class='description'><div class='short'>Retrieves the name for the Attribute. ...</div><div class='long'><p>Retrieves the name for the Attribute.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getType' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-getType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-getType' class='name expandable'>getType</a>( <span class='pre'>type</span> ) : Function</div><div class='description'><div class='short'>Retrieves the Component class (constructor function) that has been registered by the supplied type name. ...</div><div class='long'><p>Retrieves the Component class (constructor function) that has been registered by the supplied <code>type</code> name.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : String<div class='sub-desc'><p>The type name of the registered class.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Function</span><div class='sub-desc'><p>The class (constructor function) that has been registered under the given type name.</p>\n</div></li></ul></div></div></div><div id='method-hasType' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-hasType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-hasType' class='name expandable'>hasType</a>( <span class='pre'>typeName</span> ) : Boolean</div><div class='description'><div class='short'>Determines if there is a registered Attribute type with the given typeName. ...</div><div class='long'><p>Determines if there is a registered Attribute type with the given <code>typeName</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>typeName</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-hasUserDefinedGetter' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-hasUserDefinedGetter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-hasUserDefinedGetter' class='name expandable'>hasUserDefinedGetter</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Determines if the Attribute has a user-defined getter (i.e. ...</div><div class='long'><p>Determines if the Attribute has a user-defined getter (i.e. the <a href=\"#!/api/data.attribute.Attribute-cfg-get\" rel=\"data.attribute.Attribute-cfg-get\" class=\"docClass\">get</a> config was provided).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the Attribute was provided a user-defined <a href=\"#!/api/data.attribute.Attribute-cfg-get\" rel=\"data.attribute.Attribute-cfg-get\" class=\"docClass\">get</a> function.</p>\n</div></li></ul></div></div></div><div id='method-hasUserDefinedSetter' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-hasUserDefinedSetter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-hasUserDefinedSetter' class='name expandable'>hasUserDefinedSetter</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Determines if the Attribute has a user-defined setter (i.e. ...</div><div class='long'><p>Determines if the Attribute has a user-defined setter (i.e. the <a href=\"#!/api/data.attribute.Attribute-cfg-set\" rel=\"data.attribute.Attribute-cfg-set\" class=\"docClass\">set</a> config was provided).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the Attribute was provided a user-defined <a href=\"#!/api/data.attribute.Attribute-cfg-set\" rel=\"data.attribute.Attribute-cfg-set\" class=\"docClass\">set</a> function.</p>\n</div></li></ul></div></div></div><div id='method-isPersisted' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-isPersisted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-isPersisted' class='name expandable'>isPersisted</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Determines if the Attribute should be persisted. ...</div><div class='long'><p>Determines if the Attribute should be persisted.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-set' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-set' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-set' class='name expandable'>set</a>( <span class='pre'>model, newValue, oldValue</span> )</div><div class='description'><div class='short'>Method that allows for processing the value that is to be stored for this Attribute on a data.Model. ...</div><div class='long'><p>Method that allows for processing the value that is to be stored for this Attribute on a <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">data.Model</a>. This method,\nby default, calls the <a href=\"#!/api/data.attribute.Attribute-method-convert\" rel=\"data.attribute.Attribute-method-convert\" class=\"docClass\">convert</a> method to do any necessary conversion for the value, dependent on the particular\nAttribute subclass in use. However, this method may be overridden by providing a <a href=\"#!/api/data.attribute.Attribute-cfg-set\" rel=\"data.attribute.Attribute-cfg-set\" class=\"docClass\">set config</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>model</span> : <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">data.Model</a><div class='sub-desc'><p>The Model instance that is providing the value.</p>\n</div></li><li><span class='pre'>newValue</span> : Mixed<div class='sub-desc'><p>The new value, which was provided to the Model's <a href=\"#!/api/data.Model-method-set\" rel=\"data.Model-method-set\" class=\"docClass\">set</a> method.</p>\n</div></li><li><span class='pre'>oldValue</span> : Mixed<div class='sub-desc'><p>The old (previous) value that the <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a> held.</p>\n</div></li></ul></div></div></div><div id='method-valuesAreEqual' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-valuesAreEqual' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-valuesAreEqual' class='name expandable'>valuesAreEqual</a>( <span class='pre'>oldValue, newValue</span> ) : Boolean</div><div class='description'><div class='short'>Allows the Attribute to determine if two values of its data type are equal, and the model\nshould consider itself as \"...</div><div class='long'><p>Allows the Attribute to determine if two values of its data type are equal, and the model\nshould consider itself as \"changed\". This method is passed the \"old\" value and the \"new\" value\nwhen a value is <a href=\"#!/api/data.Model-method-set\" rel=\"data.Model-method-set\" class=\"docClass\">set</a> to the Model, and if this method returns <code>false</code>, the\nnew value is taken as a \"change\".</p>\n\n<p>This may be overridden by subclasses to provide custom comparisons, but the default implementation is\nto directly compare primitives, and deep compare arrays and objects.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>oldValue</span> : Mixed<div class='sub-desc'>\n</div></li><li><span class='pre'>newValue</span> : Mixed<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the values are equal, and the Model should <em>not</em> consider the new value as a\n  change of the old value, or false if the values are different, and the new value should be taken as a change.</p>\n\n\n\n</div></li></ul></div></div></div></div></div></div></div>"});