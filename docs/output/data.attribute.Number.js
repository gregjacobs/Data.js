Ext.data.JsonP.data_attribute_Number({"tagname":"class","name":"data.attribute.Number","extends":"data.attribute.Primitive","mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{"abstract":true},"private":null,"id":"class-data.attribute.Number","members":{"cfg":[{"name":"defaultValue","tagname":"cfg","owner":"data.attribute.Number","meta":{},"id":"cfg-defaultValue"},{"name":"get","tagname":"cfg","owner":"data.attribute.Attribute","meta":{},"id":"cfg-get"},{"name":"name","tagname":"cfg","owner":"data.attribute.Attribute","meta":{"required":true},"id":"cfg-name"},{"name":"persist","tagname":"cfg","owner":"data.attribute.Attribute","meta":{},"id":"cfg-persist"},{"name":"raw","tagname":"cfg","owner":"data.attribute.Attribute","meta":{},"id":"cfg-raw"},{"name":"set","tagname":"cfg","owner":"data.attribute.Attribute","meta":{},"id":"cfg-set"},{"name":"type","tagname":"cfg","owner":"data.attribute.Attribute","meta":{},"id":"cfg-type"},{"name":"useNull","tagname":"cfg","owner":"data.attribute.Number","meta":{},"id":"cfg-useNull"}],"property":[{"name":"stripCharsRegex","tagname":"property","owner":"data.attribute.Number","meta":{"protected":true},"id":"property-stripCharsRegex"}],"method":[{"name":"constructor","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-constructor"},{"name":"afterSet","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-afterSet"},{"name":"beforeSet","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-beforeSet"},{"name":"doSet","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-doSet"},{"name":"getDefaultValue","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-getDefaultValue"},{"name":"getName","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-getName"},{"name":"getType","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-getType"},{"name":"hasType","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-hasType"},{"name":"hasUserDefinedGetter","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-hasUserDefinedGetter"},{"name":"hasUserDefinedSetter","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-hasUserDefinedSetter"},{"name":"isPersisted","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-isPersisted"},{"name":"set","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-set"},{"name":"valuesAreEqual","tagname":"method","owner":"data.attribute.Attribute","meta":{},"id":"method-valuesAreEqual"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":9,"files":[{"filename":"Number.js","href":"Number.html#data-attribute-Number"}],"html_meta":{"abstract":null},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":["data.attribute.Attribute","data.attribute.Primitive"],"subclasses":["data.attribute.Float","data.attribute.Integer"],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='docClass'>data.attribute.Attribute</a><div class='subclass '><a href='#!/api/data.attribute.Primitive' rel='data.attribute.Primitive' class='docClass'>data.attribute.Primitive</a><div class='subclass '><strong>data.attribute.Number</strong></div></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/data.attribute.Float' rel='data.attribute.Float' class='docClass'>data.attribute.Float</a></div><div class='dependency'><a href='#!/api/data.attribute.Integer' rel='data.attribute.Integer' class='docClass'>data.attribute.Integer</a></div><h4>Files</h4><div class='dependency'><a href='source/Number.html#data-attribute-Number' target='_blank'>Number.js</a></div></pre><div class='doc-contents'><p>Abstract base class for an Attribute that takes a number data value.</p>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Required Config options</h3><div id='cfg-name' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-cfg-name' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-cfg-name' class='name expandable'>name</a><span> : String</span><strong class='required signature' >required</strong></div><div class='description'><div class='short'>The name for the attribute, which is used by the owner Model to reference it. ...</div><div class='long'><p>The name for the attribute, which is used by the owner Model to reference it.</p>\n<p>Defaults to: <code>&quot;&quot;</code></p></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Optional Config options</h3><div id='cfg-defaultValue' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.attribute.Number'>data.attribute.Number</span><br/><a href='source/Number.html#data-attribute-Number-cfg-defaultValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Number-cfg-defaultValue' class='name expandable'>defaultValue</a><span> : Mixed/Function</span></div><div class='description'><div class='short'>The Number Attribute defaults to 0, unless the useNull config is\nset to true, in which case it defaults to null (to d...</div><div class='long'><p>The Number Attribute defaults to 0, unless the <a href=\"#!/api/data.attribute.Number-cfg-useNull\" rel=\"data.attribute.Number-cfg-useNull\" class=\"docClass\">useNull</a> config is\nset to <code>true</code>, in which case it defaults to <code>null</code> (to denote the Attribute being \"unset\").</p>\n\n<p>The default value to set to the Attribute, when the Attribute is given no initial value.</p>\n\n<p>If the <code>defaultValue</code> is a function, the function will be executed each time a <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a> is created, and its return\nvalue used as the <code>defaultValue</code>. This is useful, for example, to assign a new unique number to an attribute of a <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a>.\nEx:</p>\n\n<pre><code>MyModel = Model.extend( {\n    attributes : [\n        {\n            name: 'uniqueId', \n            defaultValue: function( attribute ) {\n                return _.uniqueId();\n            }\n        }\n    ]\n} );\n</code></pre>\n\n<p>Note that the function is passed the Attribute as its first argument, which may be used to query the Attribute's properties/configs.</p>\n<p>Overrides: <a href='#!/api/data.attribute.Attribute-cfg-defaultValue' rel='data.attribute.Attribute-cfg-defaultValue' class='docClass'>data.attribute.Attribute.defaultValue</a></p></div></div></div><div id='cfg-get' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-cfg-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-cfg-get' class='name expandable'>get</a><span> : Function</span></div><div class='description'><div class='short'>A function that can be used to change the value that is returned when the Model's get method is called\non the Attribute. ...</div><div class='long'><p>A function that can be used to change the value that is returned when the Model's <a href=\"#!/api/data.Model-method-get\" rel=\"data.Model-method-get\" class=\"docClass\">get</a> method is called\non the Attribute. This is useful to create \"computed\" attributes, which may be created based on other Attributes' values.  The function is\npassed the argument of the underlying stored value, and should return the computed value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value that the Attribute currently has stored in the <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a>.</p>\n\n<p>For example, if we had a <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a> with <code>firstName</code> and <code>lastName</code> Attributes, and we wanted to create a <code>fullName</code>\nAttribute, this could be done as in the example below. Note that just as with <a href=\"#!/api/data.attribute.Attribute-cfg-set\" rel=\"data.attribute.Attribute-cfg-set\" class=\"docClass\">set</a>, the <code>get</code> function is called in the\nscope of the <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a> that owns the attribute.</p>\n\n<pre><code>{\n    name : 'fullName',\n    get : function( value ) {  // in this example, the Attribute has no value of its own, so we ignore the arg\n        return this.get( 'firstName' ) + \" \" + this.get( 'lastName' );   // `this` refers to the model that owns the Attribute\n    }\n}\n</code></pre>\n\n<p>Note: if the intention is to convert a provided value which needs to be stored on the <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a> in a different way,\nuse a <a href=\"#!/api/data.attribute.Attribute-cfg-set\" rel=\"data.attribute.Attribute-cfg-set\" class=\"docClass\">set</a> function instead.</p>\n\n<p>However, also note that both a <a href=\"#!/api/data.attribute.Attribute-cfg-set\" rel=\"data.attribute.Attribute-cfg-set\" class=\"docClass\">set</a> and a <code>get</code> function can be used in conjunction.</p>\n</div></li></ul></div></div></div><div id='cfg-persist' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-cfg-persist' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-cfg-persist' class='name expandable'>persist</a><span> : Boolean</span></div><div class='description'><div class='short'>True if the attribute should be persisted by its Model using the Model's proxy. ...</div><div class='long'><p>True if the attribute should be persisted by its <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a> using the Model's <a href=\"#!/api/data.Model-cfg-proxy\" rel=\"data.Model-cfg-proxy\" class=\"docClass\">proxy</a>.\nSet to false to prevent the attribute from being persisted.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-raw' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-cfg-raw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-cfg-raw' class='name expandable'>raw</a><span> : Function</span></div><div class='description'><div class='short'>A function that can be used to convert an Attribute's value to a raw representation, usually for persisting data on a...</div><div class='long'><p>A function that can be used to convert an Attribute's value to a raw representation, usually for persisting data on a server.\nThis function is automatically called (if it exists) when a persistence <a href=\"#!/api/data.persistence.proxy.Proxy\" rel=\"data.persistence.proxy.Proxy\" class=\"docClass\">proxy</a> is collecting\nthe data to send to the server. The function is passed two arguments, and should return the raw value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The underlying value that the Attribute currently has stored in the <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a>.</p>\n</div></li><li><span class='pre'>model</span> : <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">data.Model</a><div class='sub-desc'><p>The Model instance that this Attribute belongs to.</p>\n\n<p>For example, a Date object is normally converted to JSON with both its date and time components in a serialized string (such\nas \"2012-01-26T01:20:54.619Z\"). To instead persist the Date in m/d/yyyy format, one could create an Attribute such as this:</p>\n\n<pre><code>{\n    name : 'eventDate',\n    set : function( value, model ) { return new Date( value ); },  // so the value is stored as a Date object when used client-side\n    raw : function( value, model ) {\n        return (value.getMonth()+1) + '/' + value.getDate() + '/' + value.getFullYear();  // m/d/yyyy format \n    }\n}\n</code></pre>\n\n<p>The value that this function returns is the value that is used when the Model's <a href=\"#!/api/data.Model-method-raw\" rel=\"data.Model-method-raw\" class=\"docClass\">raw</a> method is called\non the Attribute.</p>\n</div></li></ul></div></div></div><div id='cfg-set' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-cfg-set' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-cfg-set' class='name expandable'>set</a><span> : Function</span></div><div class='description'><div class='short'>A function that can be used to convert the raw value provided to the attribute, to a new value which will be stored\no...</div><div class='long'><p>A function that can be used to convert the raw value provided to the attribute, to a new value which will be stored\non the <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a>. This function is passed the following arguments:</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newValue</span> : Mixed<div class='sub-desc'><p>The provided new data value to the attribute. If the attribute has no initial data value, its <a href=\"#!/api/data.attribute.Attribute-cfg-defaultValue\" rel=\"data.attribute.Attribute-cfg-defaultValue\" class=\"docClass\">defaultValue</a>\n  will be provided to this argument upon instantiation of the <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a>.</p>\n</div></li><li><span class='pre'>oldValue</span> : Mixed<div class='sub-desc'><p>The old value that the attribute held (if any).</p>\n\n<p>The function should then do any processing that is necessary, and return the value that the Attribute should hold. For example,\nthis <code>set</code> function will convert a string value to a\n<a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Date\" target=\"_blank\">Date</a>\nobject. Otherwise, it will return the value unchanged:</p>\n\n<pre><code>{\n    name : 'myDateAttr',\n\n    set : function( newValue, oldValue ) {\n        if( typeof value === 'string' ) {\n            value = new Date( value );\n        }\n        return value;\n    }\n}\n</code></pre>\n\n<p>Just as with <a href=\"#!/api/data.attribute.Attribute-cfg-get\" rel=\"data.attribute.Attribute-cfg-get\" class=\"docClass\">get</a>, the <code>set</code> function is called in the scope of the <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a> that owns the attribute.\nThis can be used to set other attributes of a \"computed\" attribute. Ex:</p>\n\n<pre><code>{\n    // A \"computed\" attribute which combines the 'firstName' and 'lastName' attributes in this model (assuming they are there)\n    name : 'fullName',\n\n    set : function( newValue, oldValue ) {\n        // A setter which takes the first and last name given (such as \"Gregory Jacobs\"), and splits them up into \n        // their appropriate parts, to set the appropriate attributes for the computed attribute\n        var names = newValue.split( ' ' );  // split on the space between first and last name\n\n        // Note: `this` refers to the model which is setting the value, so we can call the set() method\n        this.set( 'firstName', names[ 0 ] );\n        this.set( 'lastName', names[ 1 ] );\n    },\n\n    get : function( value ) {\n        return this.get( 'firstName' ) + \" \" + this.get( 'lastName' );  // Combine firstName and lastName for the computed attribute. `this` refers to the model\n    }\n}\n</code></pre>\n\n<p>The function is run in the context (the <code>this</code> reference) of the <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a> instance that owns the attribute, in the that case\nthat other Attributes need to be queried, or need to be <a href=\"#!/api/data.Model-method-set\" rel=\"data.Model-method-set\" class=\"docClass\">set</a> by the <code>set</code> function. However, in the case of querying\nother Attributes for their value, be careful in that they may not be set to the expected value when the <code>set</code> function executes. For creating\ncomputed Attributes that rely on other Attributes' values, use a <a href=\"#!/api/data.attribute.Attribute-cfg-get\" rel=\"data.attribute.Attribute-cfg-get\" class=\"docClass\">get</a> function instead.</p>\n\n<p>Notes:</p>\n\n<ul>\n<li>Both a <code>set</code> and a <a href=\"#!/api/data.attribute.Attribute-cfg-get\" rel=\"data.attribute.Attribute-cfg-get\" class=\"docClass\">get</a> function can be used in conjunction.</li>\n<li>The <code>set</code> function is called upon instantiation of the <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a> if the Model is passed an initial value\nfor the Attribute, or if the Attribute has a <a href=\"#!/api/data.attribute.Attribute-cfg-defaultValue\" rel=\"data.attribute.Attribute-cfg-defaultValue\" class=\"docClass\">defaultValue</a>.</li>\n</ul>\n\n\n<p>When using <a href=\"#!/api/data.attribute.Attribute-cfg-type\" rel=\"data.attribute.Attribute-cfg-type\" class=\"docClass\">typed</a> Attributes, providing a <code>set</code> function overrides the Attribute's <a href=\"#!/api/data.attribute.Attribute-method-set\" rel=\"data.attribute.Attribute-method-set\" class=\"docClass\">set</a> method, which\ndoes the automatic conversion that the Attribute subclass advertises. If you would like to still use the original <a href=\"#!/api/data.attribute.Attribute-method-set\" rel=\"data.attribute.Attribute-method-set\" class=\"docClass\">set</a>\nmethod in conjunction with pre-processing and/or post-processing the value, you can call the original <a href=\"#!/api/data.attribute.Attribute-method-set\" rel=\"data.attribute.Attribute-method-set\" class=\"docClass\">set</a> method as\nsuch:</p>\n\n<pre><code>{\n    // Some integer value attribute, which may need to convert string values (such as \"123\") to an actual integer \n    // (done behind the scenes via `parseInt()`)\n    name : 'myValue',\n    type : 'int',\n\n    set : function( newValue, oldValue ) {\n        // Pre-process the raw newValue here, if desired\n\n        // Call the original `set` method, which does the conversion to an integer if need be\n        newValue = this._super( arguments );\n\n        // Post-process the converted newValue here, if desired\n\n        // And finally, return the value that should be stored for the attribute\n        return newValue;\n    }\n}\n</code></pre>\n</div></li></ul></div></div></div><div id='cfg-type' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-cfg-type' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-cfg-type' class='name expandable'>type</a><span> : String</span></div><div class='description'><div class='short'>Specifies the type of the Attribute, in which a conversion of the raw data will be performed. ...</div><div class='long'><p>Specifies the type of the Attribute, in which a conversion of the raw data will be performed.\nThis accepts the following general types, but custom types may be added using the <a href=\"#!/api/data.attribute.Attribute-static-method-registerType\" rel=\"data.attribute.Attribute-static-method-registerType\" class=\"docClass\">registerType</a> method.</p>\n\n<ul>\n<li><a href=\"#!/api/data.attribute.Mixed\" rel=\"data.attribute.Mixed\" class=\"docClass\">mixed</a>: Performs no conversions, and no special processing of given values. This is the default Attribute type (not recommended).</li>\n<li><a href=\"#!/api/data.attribute.String\" rel=\"data.attribute.String\" class=\"docClass\">string</a></li>\n<li><a href=\"#!/api/data.attribute.Integer\" rel=\"data.attribute.Integer\" class=\"docClass\">int</a> / <a href=\"#!/api/data.attribute.Integer\" rel=\"data.attribute.Integer\" class=\"docClass\">integer</a></li>\n<li><a href=\"#!/api/data.attribute.Float\" rel=\"data.attribute.Float\" class=\"docClass\">float</a> (really a \"double\")</li>\n<li><a href=\"#!/api/data.attribute.Boolean\" rel=\"data.attribute.Boolean\" class=\"docClass\">boolean</a> / <a href=\"#!/api/data.attribute.Boolean\" rel=\"data.attribute.Boolean\" class=\"docClass\">bool</a></li>\n<li><a href=\"#!/api/data.attribute.Date\" rel=\"data.attribute.Date\" class=\"docClass\">date</a></li>\n<li><a href=\"#!/api/data.attribute.Model\" rel=\"data.attribute.Model\" class=\"docClass\">model</a></li>\n<li><a href=\"#!/api/data.attribute.Collection\" rel=\"data.attribute.Collection\" class=\"docClass\">collection</a></li>\n</ul>\n\n</div></div></div><div id='cfg-useNull' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.attribute.Number'>data.attribute.Number</span><br/><a href='source/Number.html#data-attribute-Number-cfg-useNull' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Number-cfg-useNull' class='name expandable'>useNull</a><span> : Boolean</span></div><div class='description'><div class='short'>True to allow null to be set to the Attribute (which is usually used to denote that the\nAttribute is \"unset\", and it ...</div><div class='long'><p>True to allow <code>null</code> to be set to the Attribute (which is usually used to denote that the\nAttribute is \"unset\", and it shouldn't take an actual default value).</p>\n\n<p>This is also used when parsing the provided value for the Attribute. If this config is true, and the value\ncannot be \"easily\" parsed into an integer (i.e. if it's undefined, null, or empty string), <code>null</code> will be used\ninstead of converting to 0.</p>\n<p>Overrides: <a href='#!/api/data.attribute.Primitive-cfg-useNull' rel='data.attribute.Primitive-cfg-useNull' class='docClass'>data.attribute.Primitive.useNull</a></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-stripCharsRegex' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.attribute.Number'>data.attribute.Number</span><br/><a href='source/Number.html#data-attribute-Number-property-stripCharsRegex' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Number-property-stripCharsRegex' class='name expandable'>stripCharsRegex</a><span> : RegExp</span><strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>A regular expression for stripping non-numeric characters from a numeric value. ...</div><div class='long'><p>A regular expression for stripping non-numeric characters from a numeric value. Defaults to <code>/[\\$,%]/g</code>.\nThis should be overridden for localization. A way to do this globally is, for example:</p>\n\n<pre><code>require( [ 'data/attribute/Number' ], function( NumberAttribute ) {\n    NumberAttribute.prototype.stripCharsRegex = /newRegexHere/g;\n} );\n</code></pre>\n<p>Defaults to: <code>/[\\$,%]/g</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/data.attribute.Attribute-method-constructor' class='name expandable'>data.attribute.Number</a>( <span class='pre'>config</span> ) : <a href=\"#!/api/data.attribute.Attribute\" rel=\"data.attribute.Attribute\" class=\"docClass\">data.attribute.Attribute</a></div><div class='description'><div class='short'>Creates a new Attribute instance. ...</div><div class='long'><p>Creates a new Attribute instance. Note: You will normally not be using this constructor function, as this class\nis only used internally by <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">data.Model</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object/String<div class='sub-desc'><p>An Object (map) of the Attribute object's configuration options, which is its definition.\n  Can also be its Attribute <a href=\"#!/api/data.attribute.Attribute-cfg-name\" rel=\"data.attribute.Attribute-cfg-name\" class=\"docClass\">name</a> provided directly as a string.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/data.attribute.Attribute\" rel=\"data.attribute.Attribute\" class=\"docClass\">data.attribute.Attribute</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-afterSet' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-afterSet' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-afterSet' class='name expandable'>afterSet</a>( <span class='pre'>model, value</span> ) : Mixed</div><div class='description'><div class='short'>Method that allows post-processing for the value that is to be set to a data.Model. ...</div><div class='long'><p>Method that allows post-processing for the value that is to be set to a <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">data.Model</a>.\nThis method is executed after the <a href=\"#!/api/data.attribute.Attribute-method-beforeSet\" rel=\"data.attribute.Attribute-method-beforeSet\" class=\"docClass\">beforeSet</a> method, and the <a href=\"#!/api/data.attribute.Attribute-cfg-set\" rel=\"data.attribute.Attribute-cfg-set\" class=\"docClass\">set</a> function (if one is provided), and is given\nthe value that the <a href=\"#!/api/data.attribute.Attribute-cfg-set\" rel=\"data.attribute.Attribute-cfg-set\" class=\"docClass\">set</a> function returns. If no <a href=\"#!/api/data.attribute.Attribute-cfg-set\" rel=\"data.attribute.Attribute-cfg-set\" class=\"docClass\">set</a> function exists, this will simply be executed\nimmediately after <a href=\"#!/api/data.attribute.Attribute-method-beforeSet\" rel=\"data.attribute.Attribute-method-beforeSet\" class=\"docClass\">beforeSet</a>, after which the return from this method will be set as the data on the <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a>.</p>\n\n<p>Note that the default implementation simply returns the value unchanged, but this may be overridden\nin subclasses to provide a conversion.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>model</span> : <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">data.Model</a><div class='sub-desc'><p>The Model instance that is providing the value. This is normally not used,\n  but is provided in case any model processing is needed.</p>\n\n\n\n</div></li><li><span class='pre'>value</span> : Mixed<div class='sub-desc'><p>The value provided to the <a href=\"#!/api/data.Model-method-set\" rel=\"data.Model-method-set\" class=\"docClass\">data.Model.set</a> method, after it has been processed by the\n  <a href=\"#!/api/data.attribute.Attribute-method-beforeSet\" rel=\"data.attribute.Attribute-method-beforeSet\" class=\"docClass\">beforeSet</a> method, and any provided <a href=\"#!/api/data.attribute.Attribute-cfg-set\" rel=\"data.attribute.Attribute-cfg-set\" class=\"docClass\">set</a> function.</p>\n\n\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Mixed</span><div class='sub-desc'><p>The converted value.</p>\n\n\n\n</div></li></ul></div></div></div><div id='method-beforeSet' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-beforeSet' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-beforeSet' class='name expandable'>beforeSet</a>( <span class='pre'>model, newValue, oldValue</span> ) : Mixed</div><div class='description'><div class='short'>Method that allows pre-processing for the value that is to be set to a data.Model. ...</div><div class='long'><p>Method that allows pre-processing for the value that is to be set to a <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">data.Model</a>.\nAfter this method has processed the value, it is provided to the <a href=\"#!/api/data.attribute.Attribute-cfg-set\" rel=\"data.attribute.Attribute-cfg-set\" class=\"docClass\">set</a> function (if\none exists) or the <a href=\"#!/api/data.attribute.Attribute-method-set\" rel=\"data.attribute.Attribute-method-set\" class=\"docClass\">set</a> method, and then finally, the return value from\n<a href=\"#!/api/data.attribute.Attribute-cfg-set\" rel=\"data.attribute.Attribute-cfg-set\" class=\"docClass\">set</a> will be provided to <a href=\"#!/api/data.attribute.Attribute-method-afterSet\" rel=\"data.attribute.Attribute-method-afterSet\" class=\"docClass\">afterSet</a>, and then set as the data on the\n<a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a>.</p>\n\n<p>Note that the default implementation simply returns the raw value unchanged, but this may be overridden\nin subclasses to provide a conversion.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>model</span> : <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">data.Model</a><div class='sub-desc'><p>The Model instance that is providing the value. This is normally not used,\n  but is provided in case any model processing is needed.</p>\n\n\n\n</div></li><li><span class='pre'>newValue</span> : Mixed<div class='sub-desc'><p>The new value provided to the <a href=\"#!/api/data.Model-method-set\" rel=\"data.Model-method-set\" class=\"docClass\">data.Model.set</a> method.</p>\n\n\n\n</div></li><li><span class='pre'>oldValue</span> : Mixed<div class='sub-desc'><p>The old (previous) value that the model held (if any).</p>\n\n\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Mixed</span><div class='sub-desc'><p>The converted value.</p>\n\n\n\n</div></li></ul></div></div></div><div id='method-doSet' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-doSet' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-doSet' class='name expandable'>doSet</a>( <span class='pre'>model, newValue, oldValue</span> )</div><div class='description'><div class='short'>Indirection method that is called by a data.Model when the set method is to be called. ...</div><div class='long'><p>Indirection method that is called by a <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">data.Model</a> when the <a href=\"#!/api/data.attribute.Attribute-method-set\" rel=\"data.attribute.Attribute-method-set\" class=\"docClass\">set</a> method is to be called. This method provides\na wrapping function that allows for <code>this._super( arguments )</code> to be called when a <a href=\"#!/api/data.attribute.Attribute-cfg-set\" rel=\"data.attribute.Attribute-cfg-set\" class=\"docClass\">set</a> config is provided, to call the\noriginal conversion method from a <a href=\"#!/api/data.attribute.Attribute-cfg-set\" rel=\"data.attribute.Attribute-cfg-set\" class=\"docClass\">set</a> config function.</p>\n\n<p>Basically, it allows:</p>\n\n<pre><code>var MyModel = Model.extend( {\n    attributes: [\n        {\n            name: 'myAttr',\n            type: 'int',\n            set: function( newValue, oldValue ) {\n                // Preprocess the new value (if desired)\n\n                newValue = this._super( [ newValue, oldValue ] );  // run original conversion provided by 'int' attribute\n\n                // post process the new value (if desired)\n            }\n        }\n    ]\n} );\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>model</span> : <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">data.Model</a><div class='sub-desc'><p>The Model instance that is providing the value. This is normally not used,\n  but is provided in case any model processing is needed.</p>\n</div></li><li><span class='pre'>newValue</span> : Mixed<div class='sub-desc'><p>The new value provided to the <a href=\"#!/api/data.Model-method-set\" rel=\"data.Model-method-set\" class=\"docClass\">data.Model.set</a> method, after it has been processed\n  by the <a href=\"#!/api/data.attribute.Attribute-method-beforeSet\" rel=\"data.attribute.Attribute-method-beforeSet\" class=\"docClass\">beforeSet</a> method..</p>\n</div></li><li><span class='pre'>oldValue</span> : Mixed<div class='sub-desc'><p>The old (previous) value that the model held.</p>\n</div></li></ul></div></div></div><div id='method-getDefaultValue' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-getDefaultValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-getDefaultValue' class='name expandable'>getDefaultValue</a>( <span class='pre'></span> ) : Mixed</div><div class='description'><div class='short'>Retrieves the default value for the Attribute. ...</div><div class='long'><p>Retrieves the default value for the Attribute.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Mixed</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-getName' class='name expandable'>getName</a>( <span class='pre'></span> ) : String</div><div class='description'><div class='short'>Retrieves the name for the Attribute. ...</div><div class='long'><p>Retrieves the name for the Attribute.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getType' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-getType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-getType' class='name expandable'>getType</a>( <span class='pre'>type</span> ) : Function</div><div class='description'><div class='short'>Retrieves the Component class (constructor function) that has been registered by the supplied type name. ...</div><div class='long'><p>Retrieves the Component class (constructor function) that has been registered by the supplied <code>type</code> name.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : String<div class='sub-desc'><p>The type name of the registered class.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Function</span><div class='sub-desc'><p>The class (constructor function) that has been registered under the given type name.</p>\n</div></li></ul></div></div></div><div id='method-hasType' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-hasType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-hasType' class='name expandable'>hasType</a>( <span class='pre'>typeName</span> ) : Boolean</div><div class='description'><div class='short'>Determines if there is a registered Attribute type with the given typeName. ...</div><div class='long'><p>Determines if there is a registered Attribute type with the given <code>typeName</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>typeName</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-hasUserDefinedGetter' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-hasUserDefinedGetter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-hasUserDefinedGetter' class='name expandable'>hasUserDefinedGetter</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Determines if the Attribute has a user-defined getter (i.e. ...</div><div class='long'><p>Determines if the Attribute has a user-defined getter (i.e. the <a href=\"#!/api/data.attribute.Attribute-cfg-get\" rel=\"data.attribute.Attribute-cfg-get\" class=\"docClass\">get</a> config was provided).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the Attribute was provided a user-defined <a href=\"#!/api/data.attribute.Attribute-cfg-get\" rel=\"data.attribute.Attribute-cfg-get\" class=\"docClass\">get</a> function.</p>\n</div></li></ul></div></div></div><div id='method-hasUserDefinedSetter' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-hasUserDefinedSetter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-hasUserDefinedSetter' class='name expandable'>hasUserDefinedSetter</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Determines if the Attribute has a user-defined setter (i.e. ...</div><div class='long'><p>Determines if the Attribute has a user-defined setter (i.e. the <a href=\"#!/api/data.attribute.Attribute-cfg-set\" rel=\"data.attribute.Attribute-cfg-set\" class=\"docClass\">set</a> config was provided).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the Attribute was provided a user-defined <a href=\"#!/api/data.attribute.Attribute-cfg-set\" rel=\"data.attribute.Attribute-cfg-set\" class=\"docClass\">set</a> function.</p>\n</div></li></ul></div></div></div><div id='method-isPersisted' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-isPersisted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-isPersisted' class='name expandable'>isPersisted</a>( <span class='pre'></span> ) : Boolean</div><div class='description'><div class='short'>Determines if the Attribute should be persisted. ...</div><div class='long'><p>Determines if the Attribute should be persisted.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-set' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-set' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-set' class='name expandable'>set</a>( <span class='pre'>model, newValue, oldValue</span> )</div><div class='description'><div class='short'>Method that allows processing of the value that is to be set to a data.Model. ...</div><div class='long'><p>Method that allows processing of the value that is to be set to a <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">data.Model</a>. This method is executed after\nthe <a href=\"#!/api/data.attribute.Attribute-method-beforeSet\" rel=\"data.attribute.Attribute-method-beforeSet\" class=\"docClass\">beforeSet</a> method, and before the <a href=\"#!/api/data.attribute.Attribute-method-afterSet\" rel=\"data.attribute.Attribute-method-afterSet\" class=\"docClass\">afterSet</a> method, and can be overridden by the <a href=\"#!/api/data.attribute.Attribute-cfg-set\" rel=\"data.attribute.Attribute-cfg-set\" class=\"docClass\">set</a>\nconfig.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>model</span> : <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">data.Model</a><div class='sub-desc'><p>The Model instance that is providing the value. This is normally not used,\n  but is provided in case any model processing is needed.</p>\n</div></li><li><span class='pre'>newValue</span> : Mixed<div class='sub-desc'><p>The new value provided to the <a href=\"#!/api/data.Model-method-set\" rel=\"data.Model-method-set\" class=\"docClass\">data.Model.set</a> method, after it has been processed\n  by the <a href=\"#!/api/data.attribute.Attribute-method-beforeSet\" rel=\"data.attribute.Attribute-method-beforeSet\" class=\"docClass\">beforeSet</a> method..</p>\n</div></li><li><span class='pre'>oldValue</span> : Mixed<div class='sub-desc'><p>The old (previous) value that the model held.</p>\n</div></li></ul></div></div></div><div id='method-valuesAreEqual' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.attribute.Attribute' rel='data.attribute.Attribute' class='defined-in docClass'>data.attribute.Attribute</a><br/><a href='source/Attribute.html#data-attribute-Attribute-method-valuesAreEqual' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.attribute.Attribute-method-valuesAreEqual' class='name expandable'>valuesAreEqual</a>( <span class='pre'>oldValue, newValue</span> ) : Boolean</div><div class='description'><div class='short'>Allows the Attribute to determine if two values of its data type are equal, and the model\nshould consider itself as \"...</div><div class='long'><p>Allows the Attribute to determine if two values of its data type are equal, and the model\nshould consider itself as \"changed\". This method is passed the \"old\" value and the \"new\" value\nwhen a value is <a href=\"#!/api/data.Model-method-set\" rel=\"data.Model-method-set\" class=\"docClass\">set</a> to the Model, and if this method returns <code>false</code>, the\nnew value is taken as a \"change\".</p>\n\n<p>This may be overridden by subclasses to provide custom comparisons, but the default implementation is\nto directly compare primitives, and deep compare arrays and objects.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>oldValue</span> : Mixed<div class='sub-desc'>\n</div></li><li><span class='pre'>newValue</span> : Mixed<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the values are equal, and the Model should <em>not</em> consider the new value as a\n  change of the old value, or false if the values are different, and the new value should be taken as a change.</p>\n\n\n\n</div></li></ul></div></div></div></div></div></div></div>"});