Ext.data.JsonP.data_persistence_proxy_WebStorage({"tagname":"class","name":"data.persistence.proxy.WebStorage","extends":"data.persistence.proxy.Proxy","mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{"abstract":true},"private":null,"id":"class-data.persistence.proxy.WebStorage","members":{"cfg":[{"name":"listeners","tagname":"cfg","owner":"Observable","meta":{},"id":"cfg-listeners"},{"name":"storageKey","tagname":"cfg","owner":"data.persistence.proxy.WebStorage","meta":{"required":true},"id":"cfg-storageKey"}],"property":[{"name":"cache","tagname":"property","owner":"data.persistence.proxy.WebStorage","meta":{"protected":true},"id":"property-cache"},{"name":"filterOptRe","tagname":"property","owner":"Observable","meta":{"private":true},"id":"property-filterOptRe"}],"method":[{"name":"constructor","tagname":"method","owner":"data.persistence.proxy.WebStorage","meta":{},"id":"method-constructor"},{"name":"addEvents","tagname":"method","owner":"Observable","meta":{},"id":"method-addEvents"},{"name":"addListener","tagname":"method","owner":"Observable","meta":{"chainable":true},"id":"method-addListener"},{"name":"clear","tagname":"method","owner":"data.persistence.proxy.WebStorage","meta":{},"id":"method-clear"},{"name":"create","tagname":"method","owner":"data.persistence.proxy.WebStorage","meta":{},"id":"method-create"},{"name":"destroy","tagname":"method","owner":"data.persistence.proxy.WebStorage","meta":{},"id":"method-destroy"},{"name":"fireEvent","tagname":"method","owner":"Observable","meta":{},"id":"method-fireEvent"},{"name":"getNewId","tagname":"method","owner":"data.persistence.proxy.WebStorage","meta":{"protected":true},"id":"method-getNewId"},{"name":"getRecord","tagname":"method","owner":"data.persistence.proxy.WebStorage","meta":{"protected":true},"id":"method-getRecord"},{"name":"getRecordCounterKey","tagname":"method","owner":"data.persistence.proxy.WebStorage","meta":{"protected":true},"id":"method-getRecordCounterKey"},{"name":"getRecordIds","tagname":"method","owner":"data.persistence.proxy.WebStorage","meta":{"protected":true},"id":"method-getRecordIds"},{"name":"getRecordIdsKey","tagname":"method","owner":"data.persistence.proxy.WebStorage","meta":{"protected":true},"id":"method-getRecordIdsKey"},{"name":"getRecordKey","tagname":"method","owner":"data.persistence.proxy.WebStorage","meta":{"protected":true},"id":"method-getRecordKey"},{"name":"getStorageMedium","tagname":"method","owner":"data.persistence.proxy.WebStorage","meta":{"protected":true,"abstract":true},"id":"method-getStorageMedium"},{"name":"hasListener","tagname":"method","owner":"Observable","meta":{},"id":"method-hasListener"},{"name":"migrate","tagname":"method","owner":"data.persistence.proxy.WebStorage","meta":{"protected":true,"template":true},"id":"method-migrate"},{"name":"on","tagname":"method","owner":"Observable","meta":{},"id":"method-on"},{"name":"purgeListeners","tagname":"method","owner":"Observable","meta":{},"id":"method-purgeListeners"},{"name":"read","tagname":"method","owner":"data.persistence.proxy.WebStorage","meta":{},"id":"method-read"},{"name":"removeListener","tagname":"method","owner":"Observable","meta":{"chainable":true},"id":"method-removeListener"},{"name":"removeRecord","tagname":"method","owner":"data.persistence.proxy.WebStorage","meta":{"protected":true},"id":"method-removeRecord"},{"name":"resumeEvents","tagname":"method","owner":"Observable","meta":{},"id":"method-resumeEvents"},{"name":"setRecord","tagname":"method","owner":"data.persistence.proxy.WebStorage","meta":{"protected":true},"id":"method-setRecord"},{"name":"setRecordIds","tagname":"method","owner":"data.persistence.proxy.WebStorage","meta":{"protected":true},"id":"method-setRecordIds"},{"name":"suspendEvents","tagname":"method","owner":"Observable","meta":{},"id":"method-suspendEvents"},{"name":"un","tagname":"method","owner":"Observable","meta":{},"id":"method-un"},{"name":"update","tagname":"method","owner":"data.persistence.proxy.WebStorage","meta":{},"id":"method-update"}],"event":[{"name":"all","tagname":"event","owner":"Observable","meta":{},"id":"event-all"}],"css_var":[],"css_mixin":[]},"linenr":11,"files":[{"filename":"WebStorage.js","href":"WebStorage.html#data-persistence-proxy-WebStorage"}],"html_meta":{"abstract":null},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":["Observable","data.persistence.proxy.Proxy"],"subclasses":["data.persistence.proxy.LocalStorage","data.persistence.proxy.SessionStorage"],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Observable' rel='Observable' class='docClass'>Observable</a><div class='subclass '><a href='#!/api/data.persistence.proxy.Proxy' rel='data.persistence.proxy.Proxy' class='docClass'>data.persistence.proxy.Proxy</a><div class='subclass '><strong>data.persistence.proxy.WebStorage</strong></div></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/data.persistence.proxy.LocalStorage' rel='data.persistence.proxy.LocalStorage' class='docClass'>data.persistence.proxy.LocalStorage</a></div><div class='dependency'><a href='#!/api/data.persistence.proxy.SessionStorage' rel='data.persistence.proxy.SessionStorage' class='docClass'>data.persistence.proxy.SessionStorage</a></div><h4>Files</h4><div class='dependency'><a href='source/WebStorage.html#data-persistence-proxy-WebStorage' target='_blank'>WebStorage.js</a></div></pre><div class='doc-contents'><p>The WebStorage proxy is the abstract base class for using the HTML5 local storage mechanisms. These include\nthe <a href=\"#!/api/data.persistence.proxy.LocalStorage\" rel=\"data.persistence.proxy.LocalStorage\" class=\"docClass\">LocalStorage proxy</a> and the\n<a href=\"#!/api/data.persistence.proxy.SessionStorage\" rel=\"data.persistence.proxy.SessionStorage\" class=\"docClass\">SessionStorage proxy</a>.</p>\n\n<p>WebStorage proxy is responsible for performing CRUD requests through to the <code>localStorage</code> or <code>sessionStorage</code> APIs,\nand serializing model data to and from the backing data store. See subclasses for details on usage.</p>\n\n<p>Note: The HTML5 local storage APIs are available for the following browsers:</p>\n\n<ul>\n<li>IE8+ (with the HTML5 doctype: <code>&lt;!DOCTYPE html&gt;</code>)</li>\n<li>Chrome 4+</li>\n<li>Firefox 3.5+</li>\n<li>Safari 4+</li>\n<li>Opera 10.5+</li>\n<li>iOS Safari 3.2+</li>\n<li>Android Browser 2.1+</li>\n<li>Blackberry Browser 7+</li>\n<li>Opera Mobile 11+</li>\n<li>Chrome for Android 28+</li>\n<li>Firefox for Android 23+</li>\n</ul>\n\n\n<p>Keep your target audience in mind when using one of the WebStorage proxies.</p>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Required Config options</h3><div id='cfg-storageKey' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.WebStorage'>data.persistence.proxy.WebStorage</span><br/><a href='source/WebStorage.html#data-persistence-proxy-WebStorage-cfg-storageKey' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.WebStorage-cfg-storageKey' class='name expandable'>storageKey</a><span> : String</span><strong class='required signature' >required</strong></div><div class='description'><div class='short'>The storage key which will be used to read and save data. ...</div><div class='long'><p>The storage key which will be used to read and save data.</p>\n\n<p>This must be unique for a given model/collection, as the LocalStorage/SessionStorage\nobjects are a simple key/value store. If two or more WebStorage proxies have the same\nstorageKey, they may conflict.</p>\n\n<p>Some examples of this might be:\n- \"Users\"\n- \"app.Users\"</p>\n\n<p>Note: Once chosen, this value should never be changed. This value will be used to look up\nmodel data in the WebStorage's key/value store, and if changed, existing data will be left\norphaned.</p>\n</div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Optional Config options</h3><div id='cfg-listeners' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-cfg-listeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-cfg-listeners' class='name expandable'>listeners</a><span> : Object</span></div><div class='description'><div class='short'>(optional)\nA config object containing one or more event handlers to be added to this object during initialization. ...</div><div class='long'><p>(optional)\nA config object containing one or more event handlers to be added to this object during initialization.<br/>\nThis should be a valid listeners config object as specified in the <a href=\"#!/api/Observable-method-addListener\" rel=\"Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching\nmultiple handlers at once.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-cache' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.WebStorage'>data.persistence.proxy.WebStorage</span><br/><a href='source/WebStorage.html#data-persistence-proxy-WebStorage-property-cache' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.WebStorage-property-cache' class='name expandable'>cache</a><span> : Object</span><strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>A local cache of the record data that has been read or stored. ...</div><div class='long'><p>A local cache of the record data that has been read or stored. This Object (a map)\nis keyed by the record's ID, where the values are Objects with the data.</p>\n</div></div></div><div id='property-filterOptRe' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-property-filterOptRe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-property-filterOptRe' class='name expandable'>filterOptRe</a><span> : RegExp</span><strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>/^(?:scope|delay|buffer|single)$/</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.WebStorage'>data.persistence.proxy.WebStorage</span><br/><a href='source/WebStorage.html#data-persistence-proxy-WebStorage-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/data.persistence.proxy.WebStorage-method-constructor' class='name expandable'>data.persistence.proxy.WebStorage</a>( <span class='pre'>cfg</span> ) : <a href=\"#!/api/data.persistence.proxy.WebStorage\" rel=\"data.persistence.proxy.WebStorage\" class=\"docClass\">data.persistence.proxy.WebStorage</a></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cfg</span> : Object<div class='sub-desc'><p>The configuration options for this class, specified in an Object (map).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/data.persistence.proxy.WebStorage\" rel=\"data.persistence.proxy.WebStorage\" class=\"docClass\">data.persistence.proxy.WebStorage</a></span><div class='sub-desc'>\n</div></li></ul><p>Overrides: <a href='#!/api/data.persistence.proxy.Proxy-method-constructor' rel='data.persistence.proxy.Proxy-method-constructor' class='docClass'>data.persistence.proxy.Proxy.constructor</a></p></div></div></div><div id='method-addEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-method-addEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-method-addEvents' class='name expandable'>addEvents</a>( <span class='pre'>o, Optional</span> )</div><div class='description'><div class='short'>Adds the specified events to the list of events which this Observable may fire. ...</div><div class='long'><p>Adds the specified events to the list of events which this Observable may fire.\nUsage:</p>\n\n<pre><code>this.addEvents( 'storeloaded', 'storecleared' );\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object/String<div class='sub-desc'><p>Either an object with event names as properties with a value of <code>true</code>\nor the first event name string if multiple event names are being passed as separate parameters.</p>\n</div></li><li><span class='pre'>Optional</span> : String<div class='sub-desc'><p>. Event name if multiple event names are being passed as separate parameters.</p>\n</div></li></ul></div></div></div><div id='method-addListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-method-addListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-method-addListener' class='name expandable'>addListener</a>( <span class='pre'>eventName, handler, [scope], [options]</span> ) : <a href=\"#!/api/Observable\" rel=\"Observable\" class=\"docClass\">Observable</a><strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'>Appends an event handler to this object. ...</div><div class='long'><p>Appends an event handler to this object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The name of the event to listen for.</p>\n</div></li><li><span class='pre'>handler</span> : Function<div class='sub-desc'><p>The method the event invokes.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n<p>Alternatively, a single options object may be provided:</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>An object containing handler configuration properties. This may contain any of the following properties:</p>\n<ul><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n</div></li><li><span class='pre'>delay</span> : Number (optional)<div class='sub-desc'><p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n</div></li><li><span class='pre'>single</span> : Boolean (optional)<div class='sub-desc'><p>True to add a handler to handle just the next firing of the event, and then remove itself.</p>\n</div></li><li><span class='pre'>buffer</span> : Number (optional)<div class='sub-desc'><p>Causes the handler to be scheduled to run in a delayed fashion by the specified number of milliseconds.\n  If the event fires again within that time, the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n<p><strong>Combining Options</strong>\nUsing the options argument, it is possible to combine different types of listeners:</p>\n\n<p>A delayed, one-time listener.</p>\n\n<pre><code>myDataView.on('click', this.onClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n<p><strong>Attaching multiple handlers in 1 call</strong>\nThe method also allows for a single argument to be passed which is a config object containing properties\nwhich specify multiple handlers.</p>\n\n<pre><code>myGridPanel.on({\n    'click' : {\n        fn: this.onClick,\n        scope: this,\n        delay: 100\n    },\n    'mouseover' : {\n        fn: this.onMouseOver,\n        scope: this\n    },\n    'mouseout' : {\n        fn: this.onMouseOut,\n        scope: this\n    }\n});\n</code></pre>\n\n<p>Or a shorthand syntax:</p>\n\n<pre><code>myGridPanel.on( {\n    'click' : this.onClick,\n    'mouseover' : this.onMouseOver,\n    'mouseout' : this.onMouseOut,\n    scope: this\n} );\n</code></pre>\n</div></li></ul></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Observable\" rel=\"Observable\" class=\"docClass\">Observable</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-clear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.WebStorage'>data.persistence.proxy.WebStorage</span><br/><a href='source/WebStorage.html#data-persistence-proxy-WebStorage-method-clear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.WebStorage-method-clear' class='name expandable'>clear</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Clears all WebStorage used by the storageKey for the WebStorageProxy. ...</div><div class='long'><p>Clears all WebStorage used by the <a href=\"#!/api/data.persistence.proxy.WebStorage-cfg-storageKey\" rel=\"data.persistence.proxy.WebStorage-cfg-storageKey\" class=\"docClass\">storageKey</a> for the WebStorageProxy.</p>\n\n<p>All records are removed, as well as the associated bookkeeping data.</p>\n</div></div></div><div id='method-create' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.WebStorage'>data.persistence.proxy.WebStorage</span><br/><a href='source/WebStorage.html#data-persistence-proxy-WebStorage-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.WebStorage-method-create' class='name expandable'>create</a>( <span class='pre'>request</span> ) : jQuery.Promise</div><div class='description'><div class='short'>Creates one or more Models in WebStorage. ...</div><div class='long'><p>Creates one or more Models in WebStorage.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>request</span> : <a href=\"#!/api/data.persistence.request.Create\" rel=\"data.persistence.request.Create\" class=\"docClass\">data.persistence.request.Create</a><div class='sub-desc'><p>The CreateRequest instance that holds the model(s)\n  to be created.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>jQuery.Promise</span><div class='sub-desc'><p>A Promise object which is resolved when the request is complete.\n  <code>done</code>, <code>fail</code>, and <code>always</code> callbacks are called with the <code>request</code> object provided to\n  this method as the first argument.</p>\n</div></li></ul><p>Overrides: <a href='#!/api/data.persistence.proxy.Proxy-method-create' rel='data.persistence.proxy.Proxy-method-create' class='docClass'>data.persistence.proxy.Proxy.create</a></p></div></div></div><div id='method-destroy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.WebStorage'>data.persistence.proxy.WebStorage</span><br/><a href='source/WebStorage.html#data-persistence-proxy-WebStorage-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.WebStorage-method-destroy' class='name expandable'>destroy</a>( <span class='pre'>request</span> ) : jQuery.Promise</div><div class='description'><div class='short'>Destroys (deletes) one or more Models from WebStorage. ...</div><div class='long'><p>Destroys (deletes) one or more Models from WebStorage.</p>\n\n<p>Note that this method is not named \"delete\" as \"delete\" is a JavaScript reserved word.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>request</span> : <a href=\"#!/api/data.persistence.request.Destroy\" rel=\"data.persistence.request.Destroy\" class=\"docClass\">data.persistence.request.Destroy</a><div class='sub-desc'><p>The DestroyRequest instance that holds the model(s)\n  to be destroyed.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>jQuery.Promise</span><div class='sub-desc'><p>A Promise object which is resolved when the request is complete.\n  <code>done</code>, <code>fail</code>, and <code>always</code> callbacks are called with the <code>request</code> object provided to\n  this method as the first argument.</p>\n</div></li></ul><p>Overrides: <a href='#!/api/data.persistence.proxy.Proxy-method-destroy' rel='data.persistence.proxy.Proxy-method-destroy' class='docClass'>data.persistence.proxy.Proxy.destroy</a></p></div></div></div><div id='method-fireEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-method-fireEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-method-fireEvent' class='name expandable'>fireEvent</a>( <span class='pre'>eventName, args</span> ) : Boolean</div><div class='description'><div class='short'>Fires the specified event with the passed parameters (minus the event name). ...</div><div class='long'><p>Fires the specified event with the passed parameters (minus the event name).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The name of the event to fire.</p>\n</div></li><li><span class='pre'>args</span> : Object...<div class='sub-desc'><p>Variable number of parameters are passed to handlers.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>returns false if any of the handlers return false otherwise it returns true.</p>\n</div></li></ul></div></div></div><div id='method-getNewId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.WebStorage'>data.persistence.proxy.WebStorage</span><br/><a href='source/WebStorage.html#data-persistence-proxy-WebStorage-method-getNewId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.WebStorage-method-getNewId' class='name expandable'>getNewId</a>( <span class='pre'></span> ) : Number<strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>Retrieves a new, sequential ID which can be used to create records (models). ...</div><div class='long'><p>Retrieves a new, sequential ID which can be used to <a href=\"#!/api/data.persistence.proxy.WebStorage-method-create\" rel=\"data.persistence.proxy.WebStorage-method-create\" class=\"docClass\">create</a> records (models). Once this\nID is returned, it is considered \"taken\", and subsequent calls to this method will return new IDs.</p>\n\n<p>This method also double checks that no manually-assigned IDs would be overwritten by a generated ID.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A new, unused sequential ID. This returns a Number ID, for populating models that\n  accept a Number ID attribute. Models with a String ID property will automatically convert the\n  number to a String.</p>\n</div></li></ul></div></div></div><div id='method-getRecord' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.WebStorage'>data.persistence.proxy.WebStorage</span><br/><a href='source/WebStorage.html#data-persistence-proxy-WebStorage-method-getRecord' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.WebStorage-method-getRecord' class='name expandable'>getRecord</a>( <span class='pre'>id</span> ) : Object<strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>Retrieves a record by ID from the underlying WebStorage medium. ...</div><div class='long'><p>Retrieves a record by ID from the underlying WebStorage medium.</p>\n\n<p>Each record is originally stored with the Model's <a href=\"#!/api/data.Model-cfg-version\" rel=\"data.Model-cfg-version\" class=\"docClass\">version number</a> that represented the\nModel at the time of storage, and its underlying data. An example of the format might be this:</p>\n\n<pre><code>{\n    version : 1,\n    data : {\n        attr1 : \"value1\",\n        attr2 : \"value2\",\n        ...\n    }\n}\n</code></pre>\n\n<p>This is passed to the <a href=\"#!/api/data.persistence.proxy.WebStorage-method-migrate\" rel=\"data.persistence.proxy.WebStorage-method-migrate\" class=\"docClass\">migrate</a> method, to allow any conversion to the latest format of the model, and then\nthe <code>data</code> is returned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : Number/String<div class='sub-desc'><p>The ID of the record to retrieve.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>An object which contains the record data for the stored record, or <code>null</code>\n  if there is no record for the given <code>id</code>.</p>\n</div></li></ul></div></div></div><div id='method-getRecordCounterKey' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.WebStorage'>data.persistence.proxy.WebStorage</span><br/><a href='source/WebStorage.html#data-persistence-proxy-WebStorage-method-getRecordCounterKey' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.WebStorage-method-getRecordCounterKey' class='name expandable'>getRecordCounterKey</a>( <span class='pre'></span> ) : String<strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>Retrieves the WebStorage key name for the proxy's \"record counter\" for this storageKey. ...</div><div class='long'><p>Retrieves the WebStorage key name for the proxy's \"record counter\" for this <a href=\"#!/api/data.persistence.proxy.WebStorage-cfg-storageKey\" rel=\"data.persistence.proxy.WebStorage-cfg-storageKey\" class=\"docClass\">storageKey</a>. This\nnumber is used to always generate new, sequential IDs for records when being <a href=\"#!/api/data.persistence.proxy.WebStorage-method-create\" rel=\"data.persistence.proxy.WebStorage-method-create\" class=\"docClass\">created</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The key name for the \"record counter\" in WebStorage, for this {link <a href=\"#!/api/data.persistence.proxy.WebStorage-cfg-storageKey\" rel=\"data.persistence.proxy.WebStorage-cfg-storageKey\" class=\"docClass\">storageKey</a>}.</p>\n</div></li></ul></div></div></div><div id='method-getRecordIds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.WebStorage'>data.persistence.proxy.WebStorage</span><br/><a href='source/WebStorage.html#data-persistence-proxy-WebStorage-method-getRecordIds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.WebStorage-method-getRecordIds' class='name expandable'>getRecordIds</a>( <span class='pre'></span> ) : String[]<strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>Retrieves the list of record (model) IDs that are currently stored for the WebStorageProxy's storageKey. ...</div><div class='long'><p>Retrieves the list of record (model) IDs that are currently stored for the WebStorageProxy's <a href=\"#!/api/data.persistence.proxy.WebStorage-cfg-storageKey\" rel=\"data.persistence.proxy.WebStorage-cfg-storageKey\" class=\"docClass\">storageKey</a>.</p>\n\n<p>This information tells us which models are stored, and how many.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String[]</span><div class='sub-desc'><p>The array of IDs that are currently stored.</p>\n</div></li></ul></div></div></div><div id='method-getRecordIdsKey' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.WebStorage'>data.persistence.proxy.WebStorage</span><br/><a href='source/WebStorage.html#data-persistence-proxy-WebStorage-method-getRecordIdsKey' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.WebStorage-method-getRecordIdsKey' class='name expandable'>getRecordIdsKey</a>( <span class='pre'></span> ) : String<strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>Retrieves the WebStorage key name for the proxy's list of currently-stored record (model) IDs. ...</div><div class='long'><p>Retrieves the WebStorage key name for the proxy's list of currently-stored record (model) IDs. This array\nis used for bookkeeping, so that the proxy knows which models are stored, and how many, for the particular\n<a href=\"#!/api/data.persistence.proxy.WebStorage-cfg-storageKey\" rel=\"data.persistence.proxy.WebStorage-cfg-storageKey\" class=\"docClass\">storageKey</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The key name for the \"recordIds\" in WebStorage, for this {link <a href=\"#!/api/data.persistence.proxy.WebStorage-cfg-storageKey\" rel=\"data.persistence.proxy.WebStorage-cfg-storageKey\" class=\"docClass\">storageKey</a>}.</p>\n</div></li></ul></div></div></div><div id='method-getRecordKey' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.WebStorage'>data.persistence.proxy.WebStorage</span><br/><a href='source/WebStorage.html#data-persistence-proxy-WebStorage-method-getRecordKey' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.WebStorage-method-getRecordKey' class='name expandable'>getRecordKey</a>( <span class='pre'>id</span> ) : String<strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>Retrieves the WebStorage key name for the given Record, by its ID. ...</div><div class='long'><p>Retrieves the WebStorage key name for the given Record, by its ID.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : Number/String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The key name that will uniquely identify the record in WebStorage, for this {link <a href=\"#!/api/data.persistence.proxy.WebStorage-cfg-storageKey\" rel=\"data.persistence.proxy.WebStorage-cfg-storageKey\" class=\"docClass\">storageKey</a>}.</p>\n</div></li></ul></div></div></div><div id='method-getStorageMedium' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.WebStorage'>data.persistence.proxy.WebStorage</span><br/><a href='source/WebStorage.html#data-persistence-proxy-WebStorage-method-getStorageMedium' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.WebStorage-method-getStorageMedium' class='name expandable'>getStorageMedium</a>( <span class='pre'></span> ) : Object<strong class='abstract signature' >abstract</strong><strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>Retrieves the WebStorage medium to use. ...</div><div class='long'><p>Retrieves the WebStorage medium to use. This will either be the <code>window.localStorage</code> or\n<code>window.sessionStorage</code> object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Either the <code>window.localStorage</code> or <code>window.sessionStorage</code> object, or\n  <code>undefined</code> if the particular implementation is unavailable.</p>\n</div></li></ul></div></div></div><div id='method-hasListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-method-hasListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-method-hasListener' class='name expandable'>hasListener</a>( <span class='pre'>eventName</span> ) : Boolean</div><div class='description'><div class='short'>Checks to see if this object has any listeners for a specified event ...</div><div class='long'><p>Checks to see if this object has any listeners for a specified event</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The name of the event to check for</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the event is being listened for, else false</p>\n</div></li></ul></div></div></div><div id='method-migrate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.WebStorage'>data.persistence.proxy.WebStorage</span><br/><a href='source/WebStorage.html#data-persistence-proxy-WebStorage-method-migrate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.WebStorage-method-migrate' class='name expandable'>migrate</a>( <span class='pre'>version, data</span> ) : Object<strong class='protected signature' >protected</strong><strong class='template signature' >template</strong></div><div class='description'><div class='short'>Hook method to allow for a subclass to transform the data from a previous version to the latest format\nof the data. ...</div><div class='long'><p>Hook method to allow for a subclass to transform the data from a previous version to the latest format\nof the data. This method should be overridden by a subclass to implement the appropriate transformations\nto the <code>data</code>.</p>\n\n<h2>Implementing a migration</h2>\n\n<p>By default, this method simply returns the <code>data</code> provided to it. However, here is an example of what an\noverride might look like:</p>\n\n<pre><code>migrate : function( version, data ) {\n    switch( version ) {\n        case 1 : \n            data.newProp = data.oldProp;\n            delete data.oldProp;\n            &amp;#47;* falls through *&amp;#47;  // note the comment to remove JSHint warning about no 'break' statement here\n        case 2 :\n            data.newProp2 = data.oldProp2;\n            delete data.oldProp2;\n    }\n    return data;\n}\n</code></pre>\n\n<p>Note that there are no <code>break</code> statements in this <code>switch</code> block. This is because if a model's data is at version\n1, then we want to apply the migrations to transform it from version 1 to version 2, and then from version 2 to version\n3 (assuming version 3 is the latest). Alternatively, you could apply all transformations in each <code>case</code>, but then\neach time the Model's structure is changed, you would need to update all cases.</p>\n\n<p>Tip: use the <code>&amp;#47;* falls through *&amp;#47;</code> annotation when using JSHint, to remove warnings about a case without\na <code>break</code> statement.</p>\n      <div class='signature-box template'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>version</span> : Number<div class='sub-desc'><p>The version number of the data. This can be used in a <code>switch</code> statement to apply\n  data transformations to bring the data up to the latest version.</p>\n</div></li><li><span class='pre'>data</span> : Object<div class='sub-desc'><p>The data to migrate.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The migrated data.</p>\n</div></li></ul></div></div></div><div id='method-on' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-method-on' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-method-on' class='name expandable'>on</a>( <span class='pre'>eventName, handler, [scope], [options]</span> )</div><div class='description'><div class='short'>Appends an event handler to this object (shorthand for addListener.) ...</div><div class='long'><p>Appends an event handler to this object (shorthand for <a href=\"#!/api/Observable-method-addListener\" rel=\"Observable-method-addListener\" class=\"docClass\">addListener</a>.)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The type of event to listen for</p>\n</div></li><li><span class='pre'>handler</span> : Function<div class='sub-desc'><p>The method the event invokes</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope (<code>this</code> reference) in which the handler function is executed.\n  <strong>If omitted, defaults to the object which fired the event.</strong></p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>An object containing handler configuration.</p>\n</div></li></ul></div></div></div><div id='method-purgeListeners' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-method-purgeListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-method-purgeListeners' class='name expandable'>purgeListeners</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Removes all listeners for this object ...</div><div class='long'><p>Removes all listeners for this object</p>\n</div></div></div><div id='method-read' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.WebStorage'>data.persistence.proxy.WebStorage</span><br/><a href='source/WebStorage.html#data-persistence-proxy-WebStorage-method-read' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.WebStorage-method-read' class='name expandable'>read</a>( <span class='pre'>request</span> ) : jQuery.Promise</div><div class='description'><div class='short'>Reads one or more Models from WebStorage. ...</div><div class='long'><p>Reads one or more <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Models</a> from WebStorage.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>request</span> : <a href=\"#!/api/data.persistence.request.Read\" rel=\"data.persistence.request.Read\" class=\"docClass\">data.persistence.request.Read</a><div class='sub-desc'><p>The ReadRequest instance that describes the\n  model(s) to be read.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>jQuery.Promise</span><div class='sub-desc'><p>A Promise object which is resolved when the request is complete.\n  <code>done</code>, <code>fail</code>, and <code>always</code> callbacks are called with the <code>request</code> object provided to\n  this method as the first argument.</p>\n</div></li></ul><p>Overrides: <a href='#!/api/data.persistence.proxy.Proxy-method-read' rel='data.persistence.proxy.Proxy-method-read' class='docClass'>data.persistence.proxy.Proxy.read</a></p></div></div></div><div id='method-removeListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-method-removeListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-method-removeListener' class='name expandable'>removeListener</a>( <span class='pre'>eventName, handler, [scope]</span> ) : <a href=\"#!/api/Observable\" rel=\"Observable\" class=\"docClass\">Observable</a><strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'>Removes an event handler. ...</div><div class='long'><p>Removes an event handler.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The type of event the handler was associated with.</p>\n</div></li><li><span class='pre'>handler</span> : Function<div class='sub-desc'><p>The handler to remove. <b>This must be a reference to the function passed into the <a href=\"#!/api/Observable-method-addListener\" rel=\"Observable-method-addListener\" class=\"docClass\">addListener</a> call.</b></p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope originally specified for the handler.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Observable\" rel=\"Observable\" class=\"docClass\">Observable</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-removeRecord' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.WebStorage'>data.persistence.proxy.WebStorage</span><br/><a href='source/WebStorage.html#data-persistence-proxy-WebStorage-method-removeRecord' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.WebStorage-method-removeRecord' class='name expandable'>removeRecord</a>( <span class='pre'>id</span> )<strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>Removes a record by ID. ...</div><div class='long'><p>Removes a record by ID.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : Number/String<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-resumeEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-method-resumeEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-method-resumeEvents' class='name expandable'>resumeEvents</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Resume firing events. ...</div><div class='long'><p>Resume firing events. (see <a href=\"#!/api/Observable-method-suspendEvents\" rel=\"Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>)\nIf events were suspended using the <code>&lt;b&gt;queueSuspended&lt;/b&gt;</code> parameter, then all\nevents fired during event suspension will be sent to any listeners now.</p>\n</div></div></div><div id='method-setRecord' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.WebStorage'>data.persistence.proxy.WebStorage</span><br/><a href='source/WebStorage.html#data-persistence-proxy-WebStorage-method-setRecord' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.WebStorage-method-setRecord' class='name expandable'>setRecord</a>( <span class='pre'>model, [id]</span> )<strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>Stores a record to the underlying WebStorage medium. ...</div><div class='long'><p>Stores a record to the underlying WebStorage medium.</p>\n\n<p>The record is stored with the Model's <a href=\"#!/api/data.Model-cfg-version\" rel=\"data.Model-cfg-version\" class=\"docClass\">version number</a> that represented the\nModel at the time of storage, along with its underlying data. An example of the format might be this:</p>\n\n<pre><code>{\n    version : 1,\n    data : {\n        attr1 : \"value1\",\n        attr2 : \"value2\",\n        ...\n    }\n}\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>model</span> : <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">data.Model</a><div class='sub-desc'><p>The Model to save a record for.</p>\n</div></li><li><span class='pre'>id</span> : Number/String (optional)<div class='sub-desc'><p>The ID to save the record for. If not provided, uses the Model's\n  <a href=\"#!/api/data.Model-method-getId\" rel=\"data.Model-method-getId\" class=\"docClass\">id</a>. This parameter is for saving new models, which don't have an ID yet.</p>\n</div></li></ul></div></div></div><div id='method-setRecordIds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.WebStorage'>data.persistence.proxy.WebStorage</span><br/><a href='source/WebStorage.html#data-persistence-proxy-WebStorage-method-setRecordIds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.WebStorage-method-setRecordIds' class='name expandable'>setRecordIds</a>( <span class='pre'>recordIds</span> )<strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>Sets the list of record (model) IDs that are currently stored for the WebStorageProxy's storageKey. ...</div><div class='long'><p>Sets the list of record (model) IDs that are currently stored for the WebStorageProxy's <a href=\"#!/api/data.persistence.proxy.WebStorage-cfg-storageKey\" rel=\"data.persistence.proxy.WebStorage-cfg-storageKey\" class=\"docClass\">storageKey</a>.</p>\n\n<p>This information tells us which models are stored, and how many. It must be updated as new records are inserted,\nor current records are removed, for bookkeeping purposes.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>recordIds</span> : String[]<div class='sub-desc'><p>The array of record IDs. Any numbers in the array will be converted to strings.</p>\n</div></li></ul></div></div></div><div id='method-suspendEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-method-suspendEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-method-suspendEvents' class='name expandable'>suspendEvents</a>( <span class='pre'>queueSuspended</span> )</div><div class='description'><div class='short'>Suspend the firing of all events. ...</div><div class='long'><p>Suspend the firing of all events. (see <a href=\"#!/api/Observable-method-resumeEvents\" rel=\"Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>queueSuspended</span> : Boolean<div class='sub-desc'><p>Pass as true to queue up suspended events to be fired\n  after the <a href=\"#!/api/Observable-method-resumeEvents\" rel=\"Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events;</p>\n</div></li></ul></div></div></div><div id='method-un' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-method-un' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-method-un' class='name expandable'>un</a>( <span class='pre'>eventName, handler, [scope]</span> )</div><div class='description'><div class='short'>Removes an event handler (shorthand for removeListener.) ...</div><div class='long'><p>Removes an event handler (shorthand for <a href=\"#!/api/Observable-method-removeListener\" rel=\"Observable-method-removeListener\" class=\"docClass\">removeListener</a>.)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The type of event the handler was associated with.</p>\n</div></li><li><span class='pre'>handler</span> : Function<div class='sub-desc'><p>The handler to remove. <strong>This must be a reference to the function passed into the <a href=\"#!/api/Observable-method-addListener\" rel=\"Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope originally specified for the handler.</p>\n</div></li></ul></div></div></div><div id='method-update' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.WebStorage'>data.persistence.proxy.WebStorage</span><br/><a href='source/WebStorage.html#data-persistence-proxy-WebStorage-method-update' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.WebStorage-method-update' class='name expandable'>update</a>( <span class='pre'>request</span> ) : jQuery.Promise</div><div class='description'><div class='short'>Updates one or more Models in WebStorage. ...</div><div class='long'><p>Updates one or more Models in WebStorage.</p>\n\n<p>Note that if a Model does not exist in WebStorage, but is being \"updated\", then it will be created\ninstead.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>request</span> : <a href=\"#!/api/data.persistence.request.Update\" rel=\"data.persistence.request.Update\" class=\"docClass\">data.persistence.request.Update</a><div class='sub-desc'><p>The UpdateRequest instance that holds the model(s)\n  to be updated.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>jQuery.Promise</span><div class='sub-desc'><p>A Promise object which is resolved when the request is complete.\n  <code>done</code>, <code>fail</code>, and <code>always</code> callbacks are called with the <code>request</code> object provided to\n  this method as the first argument.</p>\n</div></li></ul><p>Overrides: <a href='#!/api/data.persistence.proxy.Proxy-method-update' rel='data.persistence.proxy.Proxy-method-update' class='docClass'>data.persistence.proxy.Proxy.update</a></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-event'>Events</h3><div class='subsection'><div id='event-all' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-event-all' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-event-all' class='name expandable'>all</a>( <span class='pre'>eventName, args</span> )</div><div class='description'><div class='short'>Special event which can be used to subscribe to all events from the Observable. ...</div><div class='long'><p>Special event which can be used to subscribe to <em>all</em> events from the Observable. When a given event\nis fired, this event is fired immediately after it, with the name of the original event as the first\nargument, and all other original arguments provided immediately after.</p>\n\n<p>Ex:</p>\n\n<pre><code>var myObservable = new Observable();\nmyObservable.on( 'all', function( eventName ) {\n    console.log( \"Event '\" + eventName + \"' was fired with args: \", Array.prototype.slice.call( arguments, 1 ) );\n} );\n\nmyObservable.fireEvent( 'change', 'a', 'b', 'c' );\n// console: Event 'change' was fired with args: [ \"a\", \"b\", \"c\" ]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The name of the original event that was fired.</p>\n</div></li><li><span class='pre'>args</span> : Mixed...<div class='sub-desc'><p>The original arguments that were provided with the original event.</p>\n</div></li></ul></div></div></div></div></div></div></div>"});