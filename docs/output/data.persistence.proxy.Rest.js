Ext.data.JsonP.data_persistence_proxy_Rest({"tagname":"class","name":"data.persistence.proxy.Rest","extends":"data.persistence.proxy.Proxy","mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-data.persistence.proxy.Rest","members":{"cfg":[{"name":"actionMethods","tagname":"cfg","owner":"data.persistence.proxy.Rest","meta":{},"id":"cfg-actionMethods"},{"name":"incremental","tagname":"cfg","owner":"data.persistence.proxy.Rest","meta":{},"id":"cfg-incremental"},{"name":"listeners","tagname":"cfg","owner":"Observable","meta":{},"id":"cfg-listeners"},{"name":"reader","tagname":"cfg","owner":"data.persistence.proxy.Proxy","meta":{},"id":"cfg-reader"},{"name":"rootProperty","tagname":"cfg","owner":"data.persistence.proxy.Rest","meta":{},"id":"cfg-rootProperty"},{"name":"urlRoot","tagname":"cfg","owner":"data.persistence.proxy.Rest","meta":{},"id":"cfg-urlRoot"}],"property":[{"name":"ajax","tagname":"property","owner":"data.persistence.proxy.Rest","meta":{"private":true},"id":"property-ajax"},{"name":"filterOptRe","tagname":"property","owner":"Observable","meta":{"private":true},"id":"property-filterOptRe"}],"method":[{"name":"constructor","tagname":"method","owner":"data.persistence.proxy.Proxy","meta":{},"id":"method-constructor"},{"name":"addEvents","tagname":"method","owner":"Observable","meta":{},"id":"method-addEvents"},{"name":"addListener","tagname":"method","owner":"Observable","meta":{"chainable":true},"id":"method-addListener"},{"name":"buildUrl","tagname":"method","owner":"data.persistence.proxy.Rest","meta":{"protected":true},"id":"method-buildUrl"},{"name":"create","tagname":"method","owner":"data.persistence.proxy.Rest","meta":{},"id":"method-create"},{"name":"destroy","tagname":"method","owner":"data.persistence.proxy.Rest","meta":{},"id":"method-destroy"},{"name":"fireEvent","tagname":"method","owner":"Observable","meta":{},"id":"method-fireEvent"},{"name":"getMethod","tagname":"method","owner":"data.persistence.proxy.Rest","meta":{"protected":true},"id":"method-getMethod"},{"name":"hasListener","tagname":"method","owner":"Observable","meta":{},"id":"method-hasListener"},{"name":"on","tagname":"method","owner":"Observable","meta":{},"id":"method-on"},{"name":"purgeListeners","tagname":"method","owner":"Observable","meta":{},"id":"method-purgeListeners"},{"name":"read","tagname":"method","owner":"data.persistence.proxy.Rest","meta":{},"id":"method-read"},{"name":"removeListener","tagname":"method","owner":"Observable","meta":{"chainable":true},"id":"method-removeListener"},{"name":"resumeEvents","tagname":"method","owner":"Observable","meta":{},"id":"method-resumeEvents"},{"name":"setRootProperty","tagname":"method","owner":"data.persistence.proxy.Rest","meta":{},"id":"method-setRootProperty"},{"name":"suspendEvents","tagname":"method","owner":"Observable","meta":{},"id":"method-suspendEvents"},{"name":"un","tagname":"method","owner":"Observable","meta":{},"id":"method-un"},{"name":"update","tagname":"method","owner":"data.persistence.proxy.Rest","meta":{},"id":"method-update"}],"event":[{"name":"all","tagname":"event","owner":"Observable","meta":{},"id":"event-all"}],"css_var":[],"css_mixin":[]},"linenr":9,"files":[{"filename":"Rest.js","href":"Rest.html#data-persistence-proxy-Rest"}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":["Observable","data.persistence.proxy.Proxy"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Observable' rel='Observable' class='docClass'>Observable</a><div class='subclass '><a href='#!/api/data.persistence.proxy.Proxy' rel='data.persistence.proxy.Proxy' class='docClass'>data.persistence.proxy.Proxy</a><div class='subclass '><strong>data.persistence.proxy.Rest</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/Rest.html#data-persistence-proxy-Rest' target='_blank'>Rest.js</a></div></pre><div class='doc-contents'><p>RestProxy is responsible for performing CRUD operations in a RESTful manner for a given Model on the server.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-actionMethods' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.Rest'>data.persistence.proxy.Rest</span><br/><a href='source/Rest.html#data-persistence-proxy-Rest-cfg-actionMethods' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.Rest-cfg-actionMethods' class='name expandable'>actionMethods</a><span> : Object</span></div><div class='description'><div class='short'>A mapping of the HTTP method to use for each action. ...</div><div class='long'><p>A mapping of the HTTP method to use for each action. This may be overridden for custom\nserver implementations.</p>\n<p>Defaults to: <code>{create: 'POST', read: 'GET', update: 'PUT', destroy: 'DELETE'}</code></p></div></div></div><div id='cfg-incremental' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.Rest'>data.persistence.proxy.Rest</span><br/><a href='source/Rest.html#data-persistence-proxy-Rest-cfg-incremental' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.Rest-cfg-incremental' class='name expandable'>incremental</a><span> : Boolean</span></div><div class='description'><div class='short'>True to have the RestProxy only provide data that has changed to the server when\nupdating a model. ...</div><div class='long'><p>True to have the RestProxy only provide data that has changed to the server when\nupdating a model. By using this, it isn't exactly following REST per se, but can\noptimize requests by only providing a subset of the full model data. Only enable\nthis if your server supports this.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-listeners' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-cfg-listeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-cfg-listeners' class='name expandable'>listeners</a><span> : Object</span></div><div class='description'><div class='short'>(optional)\nA config object containing one or more event handlers to be added to this object during initialization. ...</div><div class='long'><p>(optional)\nA config object containing one or more event handlers to be added to this object during initialization.<br/>\nThis should be a valid listeners config object as specified in the <a href=\"#!/api/Observable-method-addListener\" rel=\"Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching\nmultiple handlers at once.</p>\n</div></div></div><div id='cfg-reader' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.persistence.proxy.Proxy' rel='data.persistence.proxy.Proxy' class='defined-in docClass'>data.persistence.proxy.Proxy</a><br/><a href='source/Proxy.html#data-persistence-proxy-Proxy-cfg-reader' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.Proxy-cfg-reader' class='name expandable'>reader</a><span> : <a href=\"#!/api/data.persistence.reader.Reader\" rel=\"data.persistence.reader.Reader\" class=\"docClass\">data.persistence.reader.Reader</a></span></div><div class='description'><div class='short'>The reader to use to transform the raw data that is read by the proxy into JavaScript object(s),\nso that they can be ...</div><div class='long'><p>The reader to use to transform the raw data that is read by the proxy into JavaScript object(s),\nso that they can be passed to a <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">data.Model</a> or <a href=\"#!/api/data.Collection\" rel=\"data.Collection\" class=\"docClass\">data.Collection</a>.</p>\n\n<p>This defaults to a <a href=\"#!/api/data.persistence.reader.Json\" rel=\"data.persistence.reader.Json\" class=\"docClass\">Json</a> reader, as this is the most common\nformat. However, other implementations may be created and used, which may include method overrides\nto apply transformations to incoming data before that data is handed off to a <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">Model</a>\nor <a href=\"#!/api/data.Collection\" rel=\"data.Collection\" class=\"docClass\">Collection</a>.</p>\n</div></div></div><div id='cfg-rootProperty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.Rest'>data.persistence.proxy.Rest</span><br/><a href='source/Rest.html#data-persistence-proxy-Rest-cfg-rootProperty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.Rest-cfg-rootProperty' class='name expandable'>rootProperty</a><span> : String</span></div><div class='description'><div class='short'>If the server requires the data to be wrapped in a property of its own, use this config\nto specify it. ...</div><div class='long'><p>If the server requires the data to be wrapped in a property of its own, use this config\nto specify it. For example, if PUT'ing a Task's data needs to look like this, use this config:</p>\n\n<pre><code>{\n    \"task\" : {\n        \"text\" : \"Do Something\",\n        \"isDone\" : false\n    }\n}\n</code></pre>\n\n<p>This config should be set to \"task\" in this case.</p>\n<p>Defaults to: <code>&quot;&quot;</code></p></div></div></div><div id='cfg-urlRoot' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.Rest'>data.persistence.proxy.Rest</span><br/><a href='source/Rest.html#data-persistence-proxy-Rest-cfg-urlRoot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.Rest-cfg-urlRoot' class='name expandable'>urlRoot</a><span> : String</span></div><div class='description'><div class='short'>The url to use in a RESTful manner to perform CRUD operations. ...</div><div class='long'><p>The url to use in a RESTful manner to perform CRUD operations. Ex: <code>/tasks</code>.</p>\n\n<p>The <a href=\"#!/api/data.Model-cfg-idAttribute\" rel=\"data.Model-cfg-idAttribute\" class=\"docClass\">id</a> of the <a href=\"#!/api/data.Model\" rel=\"data.Model\" class=\"docClass\">data.Model</a> being read/updated/deleted\nwill automatically be appended to this url. Ex: <code>/tasks/12</code></p>\n<p>Defaults to: <code>&quot;&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ajax' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.Rest'>data.persistence.proxy.Rest</span><br/><a href='source/Rest.html#data-persistence-proxy-Rest-property-ajax' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.Rest-property-ajax' class='name expandable'>ajax</a><span> : Function</span><strong class='private signature' >private</strong></div><div class='description'><div class='short'>A reference to the AJAX function to use for persistence. ...</div><div class='long'><p>A reference to the AJAX function to use for persistence. This is normally left as jQuery.ajax,\nbut is changed for the unit tests.</p>\n</div></div></div><div id='property-filterOptRe' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-property-filterOptRe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-property-filterOptRe' class='name expandable'>filterOptRe</a><span> : RegExp</span><strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>/^(?:scope|delay|buffer|single)$/</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/data.persistence.proxy.Proxy' rel='data.persistence.proxy.Proxy' class='defined-in docClass'>data.persistence.proxy.Proxy</a><br/><a href='source/Proxy.html#data-persistence-proxy-Proxy-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/data.persistence.proxy.Proxy-method-constructor' class='name expandable'>data.persistence.proxy.Rest</a>( <span class='pre'>config</span> ) : <a href=\"#!/api/data.persistence.proxy.Proxy\" rel=\"data.persistence.proxy.Proxy\" class=\"docClass\">data.persistence.proxy.Proxy</a></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'><p>The configuration options for this class, specified in an Object (map).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/data.persistence.proxy.Proxy\" rel=\"data.persistence.proxy.Proxy\" class=\"docClass\">data.persistence.proxy.Proxy</a></span><div class='sub-desc'>\n</div></li></ul><p>Overrides: <a href='#!/api/Observable-method-constructor' rel='Observable-method-constructor' class='docClass'>Observable.constructor</a></p></div></div></div><div id='method-addEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-method-addEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-method-addEvents' class='name expandable'>addEvents</a>( <span class='pre'>o, Optional</span> )</div><div class='description'><div class='short'>Adds the specified events to the list of events which this Observable may fire. ...</div><div class='long'><p>Adds the specified events to the list of events which this Observable may fire.\nUsage:</p>\n\n<pre><code>this.addEvents( 'storeloaded', 'storecleared' );\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object/String<div class='sub-desc'><p>Either an object with event names as properties with a value of <code>true</code>\nor the first event name string if multiple event names are being passed as separate parameters.</p>\n</div></li><li><span class='pre'>Optional</span> : String<div class='sub-desc'><p>. Event name if multiple event names are being passed as separate parameters.</p>\n</div></li></ul></div></div></div><div id='method-addListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-method-addListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-method-addListener' class='name expandable'>addListener</a>( <span class='pre'>eventName, handler, [scope], [options]</span> ) : <a href=\"#!/api/Observable\" rel=\"Observable\" class=\"docClass\">Observable</a><strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'>Appends an event handler to this object. ...</div><div class='long'><p>Appends an event handler to this object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The name of the event to listen for.</p>\n</div></li><li><span class='pre'>handler</span> : Function<div class='sub-desc'><p>The method the event invokes.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n<p>Alternatively, a single options object may be provided:</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>An object containing handler configuration properties. This may contain any of the following properties:</p>\n<ul><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n</div></li><li><span class='pre'>delay</span> : Number (optional)<div class='sub-desc'><p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n</div></li><li><span class='pre'>single</span> : Boolean (optional)<div class='sub-desc'><p>True to add a handler to handle just the next firing of the event, and then remove itself.</p>\n</div></li><li><span class='pre'>buffer</span> : Number (optional)<div class='sub-desc'><p>Causes the handler to be scheduled to run in a delayed fashion by the specified number of milliseconds.\n  If the event fires again within that time, the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n<p><strong>Combining Options</strong>\nUsing the options argument, it is possible to combine different types of listeners:</p>\n\n<p>A delayed, one-time listener.</p>\n\n<pre><code>myDataView.on('click', this.onClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n<p><strong>Attaching multiple handlers in 1 call</strong>\nThe method also allows for a single argument to be passed which is a config object containing properties\nwhich specify multiple handlers.</p>\n\n<pre><code>myGridPanel.on({\n    'click' : {\n        fn: this.onClick,\n        scope: this,\n        delay: 100\n    },\n    'mouseover' : {\n        fn: this.onMouseOver,\n        scope: this\n    },\n    'mouseout' : {\n        fn: this.onMouseOut,\n        scope: this\n    }\n});\n</code></pre>\n\n<p>Or a shorthand syntax:</p>\n\n<pre><code>myGridPanel.on( {\n    'click' : this.onClick,\n    'mouseover' : this.onMouseOver,\n    'mouseout' : this.onMouseOut,\n    scope: this\n} );\n</code></pre>\n</div></li></ul></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Observable\" rel=\"Observable\" class=\"docClass\">Observable</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-buildUrl' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.Rest'>data.persistence.proxy.Rest</span><br/><a href='source/Rest.html#data-persistence-proxy-Rest-method-buildUrl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.Rest-method-buildUrl' class='name expandable'>buildUrl</a>( <span class='pre'>action, modelId</span> ) : String<strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>Builds the URL to use to do CRUD operations. ...</div><div class='long'><p>Builds the URL to use to do CRUD operations.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>action</span> : String<div class='sub-desc'><p>The action being taken. Must be one of: 'create', 'read', 'update', or 'destroy'.</p>\n</div></li><li><span class='pre'>modelId</span> : String<div class='sub-desc'><p>The ID for the model that a url is being built for.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The url to use.</p>\n</div></li></ul></div></div></div><div id='method-create' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.Rest'>data.persistence.proxy.Rest</span><br/><a href='source/Rest.html#data-persistence-proxy-Rest-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.Rest-method-create' class='name expandable'>create</a>( <span class='pre'>operation</span> ) : jQuery.Promise</div><div class='description'><div class='short'>Creates the Model on the server. ...</div><div class='long'><p>Creates the Model on the server.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>operation</span> : <a href=\"#!/api/data.persistence.operation.Write\" rel=\"data.persistence.operation.Write\" class=\"docClass\">data.persistence.operation.Write</a><div class='sub-desc'><p>The WriteOperation instance that holds the model(s)\n  to be created on the REST server.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>jQuery.Promise</span><div class='sub-desc'><p>A Promise object which is resolved when the operation is complete.\n  <code>done</code>, <code>fail</code>, and <code>always</code> callbacks are called with the <code>operation</code> object provided to\n  this method as the first argument.</p>\n</div></li></ul><p>Overrides: <a href='#!/api/data.persistence.proxy.Proxy-method-create' rel='data.persistence.proxy.Proxy-method-create' class='docClass'>data.persistence.proxy.Proxy.create</a></p></div></div></div><div id='method-destroy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.Rest'>data.persistence.proxy.Rest</span><br/><a href='source/Rest.html#data-persistence-proxy-Rest-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.Rest-method-destroy' class='name expandable'>destroy</a>( <span class='pre'>operation</span> ) : jQuery.Promise</div><div class='description'><div class='short'>Destroys (deletes) the Model on the server. ...</div><div class='long'><p>Destroys (deletes) the Model on the server.</p>\n\n<p>Note that this method is not named \"delete\" as \"delete\" is a JavaScript reserved word.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>operation</span> : <a href=\"#!/api/data.persistence.operation.Write\" rel=\"data.persistence.operation.Write\" class=\"docClass\">data.persistence.operation.Write</a><div class='sub-desc'><p>The WriteOperation instance that holds the model(s)\n  to be destroyed on the REST server.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>jQuery.Promise</span><div class='sub-desc'><p>A Promise object which is resolved when the operation is complete.\n  <code>done</code>, <code>fail</code>, and <code>always</code> callbacks are called with the <code>operation</code> object provided to\n  this method as the first argument.</p>\n</div></li></ul><p>Overrides: <a href='#!/api/data.persistence.proxy.Proxy-method-destroy' rel='data.persistence.proxy.Proxy-method-destroy' class='docClass'>data.persistence.proxy.Proxy.destroy</a></p></div></div></div><div id='method-fireEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-method-fireEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-method-fireEvent' class='name expandable'>fireEvent</a>( <span class='pre'>eventName, args</span> ) : Boolean</div><div class='description'><div class='short'>Fires the specified event with the passed parameters (minus the event name). ...</div><div class='long'><p>Fires the specified event with the passed parameters (minus the event name).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The name of the event to fire.</p>\n</div></li><li><span class='pre'>args</span> : Object...<div class='sub-desc'><p>Variable number of parameters are passed to handlers.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>returns false if any of the handlers return false otherwise it returns true.</p>\n</div></li></ul></div></div></div><div id='method-getMethod' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.Rest'>data.persistence.proxy.Rest</span><br/><a href='source/Rest.html#data-persistence-proxy-Rest-method-getMethod' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.Rest-method-getMethod' class='name expandable'>getMethod</a>( <span class='pre'>action</span> ) : String<strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>Retrieves the HTTP method that should be used for a given action. ...</div><div class='long'><p>Retrieves the HTTP method that should be used for a given action. This is, by default, done via\na lookup to the <a href=\"#!/api/data.persistence.proxy.Rest-cfg-actionMethods\" rel=\"data.persistence.proxy.Rest-cfg-actionMethods\" class=\"docClass\">actionMethods</a> config object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>action</span> : String<div class='sub-desc'><p>The action that is being taken. Should be 'create', 'read', 'update', or 'destroy'.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The HTTP method that should be used.</p>\n</div></li></ul></div></div></div><div id='method-hasListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-method-hasListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-method-hasListener' class='name expandable'>hasListener</a>( <span class='pre'>eventName</span> ) : Boolean</div><div class='description'><div class='short'>Checks to see if this object has any listeners for a specified event ...</div><div class='long'><p>Checks to see if this object has any listeners for a specified event</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The name of the event to check for</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the event is being listened for, else false</p>\n</div></li></ul></div></div></div><div id='method-on' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-method-on' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-method-on' class='name expandable'>on</a>( <span class='pre'>eventName, handler, [scope], [options]</span> )</div><div class='description'><div class='short'>Appends an event handler to this object (shorthand for addListener.) ...</div><div class='long'><p>Appends an event handler to this object (shorthand for <a href=\"#!/api/Observable-method-addListener\" rel=\"Observable-method-addListener\" class=\"docClass\">addListener</a>.)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The type of event to listen for</p>\n</div></li><li><span class='pre'>handler</span> : Function<div class='sub-desc'><p>The method the event invokes</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope (<code>this</code> reference) in which the handler function is executed.\n  <strong>If omitted, defaults to the object which fired the event.</strong></p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>An object containing handler configuration.</p>\n</div></li></ul></div></div></div><div id='method-purgeListeners' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-method-purgeListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-method-purgeListeners' class='name expandable'>purgeListeners</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Removes all listeners for this object ...</div><div class='long'><p>Removes all listeners for this object</p>\n</div></div></div><div id='method-read' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.Rest'>data.persistence.proxy.Rest</span><br/><a href='source/Rest.html#data-persistence-proxy-Rest-method-read' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.Rest-method-read' class='name expandable'>read</a>( <span class='pre'>operation</span> ) : jQuery.Promise</div><div class='description'><div class='short'>Reads the Model from the server. ...</div><div class='long'><p>Reads the Model from the server.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>operation</span> : <a href=\"#!/api/data.persistence.operation.Read\" rel=\"data.persistence.operation.Read\" class=\"docClass\">data.persistence.operation.Read</a><div class='sub-desc'><p>The ReadOperation instance that holds the model(s)\n  to be read from the REST server.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>jQuery.Promise</span><div class='sub-desc'><p>A Promise object which is resolved when the operation is complete.\n  <code>done</code>, <code>fail</code>, and <code>always</code> callbacks are called with the <code>operation</code> object provided to\n  this method as the first argument.</p>\n</div></li></ul><p>Overrides: <a href='#!/api/data.persistence.proxy.Proxy-method-read' rel='data.persistence.proxy.Proxy-method-read' class='docClass'>data.persistence.proxy.Proxy.read</a></p></div></div></div><div id='method-removeListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-method-removeListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-method-removeListener' class='name expandable'>removeListener</a>( <span class='pre'>eventName, handler, [scope]</span> ) : <a href=\"#!/api/Observable\" rel=\"Observable\" class=\"docClass\">Observable</a><strong class='chainable signature' >chainable</strong></div><div class='description'><div class='short'>Removes an event handler. ...</div><div class='long'><p>Removes an event handler.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The type of event the handler was associated with.</p>\n</div></li><li><span class='pre'>handler</span> : Function<div class='sub-desc'><p>The handler to remove. <b>This must be a reference to the function passed into the <a href=\"#!/api/Observable-method-addListener\" rel=\"Observable-method-addListener\" class=\"docClass\">addListener</a> call.</b></p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope originally specified for the handler.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Observable\" rel=\"Observable\" class=\"docClass\">Observable</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-resumeEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-method-resumeEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-method-resumeEvents' class='name expandable'>resumeEvents</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Resume firing events. ...</div><div class='long'><p>Resume firing events. (see <a href=\"#!/api/Observable-method-suspendEvents\" rel=\"Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>)\nIf events were suspended using the <code>&lt;b&gt;queueSuspended&lt;/b&gt;</code> parameter, then all\nevents fired during event suspension will be sent to any listeners now.</p>\n</div></div></div><div id='method-setRootProperty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.Rest'>data.persistence.proxy.Rest</span><br/><a href='source/Rest.html#data-persistence-proxy-Rest-method-setRootProperty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.Rest-method-setRootProperty' class='name expandable'>setRootProperty</a>( <span class='pre'>rootProperty</span> )</div><div class='description'><div class='short'>Accessor to set the rootProperty after instantiation. ...</div><div class='long'><p>Accessor to set the <a href=\"#!/api/data.persistence.proxy.Rest-cfg-rootProperty\" rel=\"data.persistence.proxy.Rest-cfg-rootProperty\" class=\"docClass\">rootProperty</a> after instantiation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rootProperty</span> : String<div class='sub-desc'><p>The new <a href=\"#!/api/data.persistence.proxy.Rest-cfg-rootProperty\" rel=\"data.persistence.proxy.Rest-cfg-rootProperty\" class=\"docClass\">rootProperty</a> value. This can be set to an empty string\n  to remove the <a href=\"#!/api/data.persistence.proxy.Rest-cfg-rootProperty\" rel=\"data.persistence.proxy.Rest-cfg-rootProperty\" class=\"docClass\">rootProperty</a>.</p>\n</div></li></ul></div></div></div><div id='method-suspendEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-method-suspendEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-method-suspendEvents' class='name expandable'>suspendEvents</a>( <span class='pre'>queueSuspended</span> )</div><div class='description'><div class='short'>Suspend the firing of all events. ...</div><div class='long'><p>Suspend the firing of all events. (see <a href=\"#!/api/Observable-method-resumeEvents\" rel=\"Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>queueSuspended</span> : Boolean<div class='sub-desc'><p>Pass as true to queue up suspended events to be fired\n  after the <a href=\"#!/api/Observable-method-resumeEvents\" rel=\"Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events;</p>\n</div></li></ul></div></div></div><div id='method-un' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-method-un' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-method-un' class='name expandable'>un</a>( <span class='pre'>eventName, handler, [scope]</span> )</div><div class='description'><div class='short'>Removes an event handler (shorthand for removeListener.) ...</div><div class='long'><p>Removes an event handler (shorthand for <a href=\"#!/api/Observable-method-removeListener\" rel=\"Observable-method-removeListener\" class=\"docClass\">removeListener</a>.)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The type of event the handler was associated with.</p>\n</div></li><li><span class='pre'>handler</span> : Function<div class='sub-desc'><p>The handler to remove. <strong>This must be a reference to the function passed into the <a href=\"#!/api/Observable-method-addListener\" rel=\"Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope originally specified for the handler.</p>\n</div></li></ul></div></div></div><div id='method-update' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='data.persistence.proxy.Rest'>data.persistence.proxy.Rest</span><br/><a href='source/Rest.html#data-persistence-proxy-Rest-method-update' target='_blank' class='view-source'>view source</a></div><a href='#!/api/data.persistence.proxy.Rest-method-update' class='name expandable'>update</a>( <span class='pre'>operation</span> ) : jQuery.Promise</div><div class='description'><div class='short'>Updates the given Model on the server. ...</div><div class='long'><p>Updates the given Model on the server.  This method uses \"incremental\" updates, in which only the changed attributes of the <code>model</code>\nare persisted.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>operation</span> : <a href=\"#!/api/data.persistence.operation.Write\" rel=\"data.persistence.operation.Write\" class=\"docClass\">data.persistence.operation.Write</a><div class='sub-desc'><p>The WriteOperation instance that holds the model(s)\n  to be updated on the REST server.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>jQuery.Promise</span><div class='sub-desc'><p>A Promise object which is resolved when the operation is complete.\n  <code>done</code>, <code>fail</code>, and <code>always</code> callbacks are called with the <code>operation</code> object provided to\n  this method as the first argument.</p>\n</div></li></ul><p>Overrides: <a href='#!/api/data.persistence.proxy.Proxy-method-update' rel='data.persistence.proxy.Proxy-method-update' class='docClass'>data.persistence.proxy.Proxy.update</a></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-event'>Events</h3><div class='subsection'><div id='event-all' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Observable' rel='Observable' class='defined-in docClass'>Observable</a><br/><a href='source/Observable.html#Observable-event-all' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Observable-event-all' class='name expandable'>all</a>( <span class='pre'>eventName, args</span> )</div><div class='description'><div class='short'>Special event which can be used to subscribe to all events from the Observable. ...</div><div class='long'><p>Special event which can be used to subscribe to <em>all</em> events from the Observable. When a given event\nis fired, this event is fired immediately after it, with the name of the original event as the first\nargument, and all other original arguments provided immediately after.</p>\n\n<p>Ex:</p>\n\n<pre><code>var myObservable = new Observable();\nmyObservable.on( 'all', function( eventName ) {\n    console.log( \"Event '\" + eventName + \"' was fired with args: \", Array.prototype.slice.call( arguments, 1 ) );\n} );\n\nmyObservable.fireEvent( 'change', 'a', 'b', 'c' );\n// console: Event 'change' was fired with args: [ \"a\", \"b\", \"c\" ]\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The name of the original event that was fired.</p>\n</div></li><li><span class='pre'>args</span> : Mixed...<div class='sub-desc'><p>The original arguments that were provided with the original event.</p>\n</div></li></ul></div></div></div></div></div></div></div>"});